{"version":3,"sources":["Components/Header/static-bg.jpg","Components/Header/Header.jsx","Components/MoviesContainer/Movie/Movie.jsx","Components/MoviesContainer/MoviesContainer.jsx","Components/HomePage/HomePage.jsx","Components/WatchListPage/WatchList.jsx","Components/WatchedListPage/WatchedList.jsx","Components/SearchPage/Search.jsx","Components/TopRatedPage/TopRated.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","src","staticBg","alt","to","Grade","AddToQueue","LibraryAddCheck","Movie","props","movie","poster_path","name","title","MoviesContainer","movies","filter","item","original_language","map","key","id","HomePage","api_key","useState","popularMovies","setPopularMovies","popularTV","setPopularTV","trending","setTrending","useEffect","fetch","then","res","json","data","results","WatchList","WatchedList","useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","fontSize","iconButton","searchIcon","Search","searchedItems","setSearchedItems","searchText","setSearchText","classes","Paper","component","InputBase","placeholder","value","onChange","e","target","IconButton","type","aria-label","onClick","searchItems","TopRated","topRatedMovies","setTopRatedMovies","topRatedTV","setTopRatedTV","movie_page","setMoviePage","tv_page","setTVPage","oldArray","concat","console","log","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e8cb925.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/static-bg.253549d8.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Header.scss\";\r\nimport staticBg from \"./static-bg.jpg\"\r\nimport { AddToQueue, LibraryAddCheck, Search, Grade } from '@material-ui/icons';\r\n\r\nconst Nav = () => {\r\n    return (\r\n\r\n        <header>\r\n            <div className=\"static-bg\">\r\n                <img src={staticBg} alt=\"\" />\r\n            </div>\r\n            <nav>\r\n                <div className=\"logo-container\">\r\n                    <Link className=\"links\" to=\"/\">\r\n                        <div className=\"logo\">\r\n                            <h1><span>My</span>Mdb</h1>\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"logo-slogan\">\r\n                        <p>Discover something new to Watch</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul>\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/search\">\r\n                            <i><Search className=\"icon\" /></i>&nbsp;\r\n                            Search\r\n                        </Link>\r\n                    </li>\r\n\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/topRated\">\r\n                            <i><Grade className=\"icon\" /></i>&nbsp; Top Rated\r\n                        </Link>\r\n                    </li>\r\n\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/watchList\">\r\n                            <i><AddToQueue className=\"icon\" /></i>&nbsp; Watch List\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/watchedList\">\r\n                            <i><LibraryAddCheck className=\"icon\" /></i>&nbsp; Watched\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\nimport \"./Movie.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Movie = (props) => {\r\n    return (\r\n        <div className=\"movie\">\r\n            <div className=\"img\">\r\n                <img src={`https://image.tmdb.org/t/p/w500/${props.movie.poster_path}`} alt=\"poster\" />\r\n            </div>\r\n            <Link to={`/MovieDetails/${props.movie.name ? props.movie.name : props.movie.title}`}>\r\n                <button className=\"details-btn\">More Details</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react'\r\nimport \"./MoviesContainer.scss\";\r\nimport Movie from \"./Movie/Movie\"\r\n\r\n\r\nconst MoviesContainer = (props) => {\r\n\r\n    return (\r\n        <div className=\"movies-container\">\r\n            {props.movies.filter(item => item.poster_path)\r\n                .filter(item => item.original_language !== \"ja\")\r\n                .map((item) => (\r\n                    <Movie\r\n                        movie={item}\r\n                        key={item.id}\r\n                    />\r\n                ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesContainer;","import React, { useState, useEffect } from 'react';\r\nimport \"./homePage.scss\";\r\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\"\r\n\r\nconst HomePage = () => {\r\n\r\n    const api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n    //* =============Popular Movies====================\r\n\r\n    const [popularMovies, setPopularMovies] = useState([]);\r\n    const popular_movies = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setPopularMovies(data.results))\r\n    }\r\n\r\n\r\n    //* ==============Popular TV Shows =======================\r\n    const [popularTV, setPopularTV] = useState([]);\r\n    const popular_TV = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/popular?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setPopularTV(data.results))\r\n    }\r\n\r\n\r\n    //* ================Trending =============================\r\n    const [trending, setTrending] = useState([]);\r\n    const trends = () => {\r\n        fetch(`https://api.themoviedb.org/3/trending/all/week?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setTrending(data.results))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        popular_movies();\r\n        popular_TV();\r\n        trends();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"home-page\" >\r\n\r\n            <div className=\"slogan\">\r\n                <h2>Welcome To MyMdb</h2>\r\n                <h2>Discover, Search and Make Your Watchlist</h2>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"legend\">\r\n                    <h3>Popular Movies</h3>\r\n                </div>\r\n                <div className=\"items-container\">\r\n                    <MoviesContainer movies={popularMovies} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"divider\"></div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"legend\">\r\n                    <h3>Popular TV Shows</h3>\r\n                </div>\r\n                <div className=\"items-container\">\r\n                    <MoviesContainer movies={popularTV} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"divider\"></div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"legend\">\r\n                    <h3>Trending This Week</h3>\r\n                </div>\r\n                <div className=\"items-container\">\r\n                    <MoviesContainer movies={trending} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/*\r\n            <div className=\"slogan\">\r\n                <div>\r\n                    <h3>Search Your Favourite Movie</h3>\r\n                    <h3>Make your own Watchlist</h3>\r\n                </div>\r\n                <div className=\"btn\">\r\n                    <Button\r\n                        className=\"start-btn\"\r\n                        size=\"large\"\r\n                        variant=\"contained\"\r\n                        href=\"#search-form\"\r\n                    >Start Now\r\n                </Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <SearchForm\r\n                searchText={props.searchText}\r\n                setSearchText={props.setSearchText}\r\n                movies={props.movies}\r\n                setMovies={props.setMovies}\r\n            /> \r\n            <MoviesContainer\r\n                movies={props.movies}\r\n            />\r\n            */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react'\r\nimport \"./Watchlist.scss\";\r\n\r\n\r\nconst WatchList = () => {\r\n    return (\r\n        <div className=\"watch-list\" >\r\n            <div className=\"slogan\">\r\n                <h1>Watchlist</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchList;","import React from 'react'\r\nimport \"./WatchedList.scss\";\r\n\r\n\r\n\r\nconst WatchedList = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"watched-list\"  >\r\n            <div className=\"slogan\">\r\n                <h1>Watched List</h1></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchedList;","import React, { useState } from 'react'\r\nimport \"./Search.scss\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\"\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '0.6rem 1.5rem',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: \"100%\"\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        fontSize: \"2rem\"\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    searchIcon: {\r\n        fontSize: \"2rem\"\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const [searchedItems, setSearchedItems] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    const inputHandler = (e) => {\r\n        setSearchText(e.target.value);\r\n    }\r\n\r\n    const searchItems = (searchText) => {\r\n        // fetch(`https://api.themoviedb.org/3/movie/550?api_key=${api_key}`)\r\n        fetch(`https://api.themoviedb.org/3/search/multi?api_key=${api_key}&query=${searchText}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setSearchedItems(data.results);\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"search\" >\r\n            <div className=\"search-form\">\r\n                <Paper component=\"form\" className={classes.root}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search for Anything ...\"\r\n                        value={searchText}\r\n                        onChange={inputHandler}\r\n                    />\r\n                    <IconButton\r\n                        type=\"button\"\r\n                        className={classes.iconButton}\r\n                        aria-label=\"search\"\r\n                        onClick={() => searchItems(searchText)}\r\n                    >\r\n                        <SearchIcon\r\n                            className={classes.searchIcon}\r\n                        />\r\n                    </IconButton>\r\n                </Paper>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"items-container\">\r\n                    <MoviesContainer movies={searchedItems} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useEffect, useState } from 'react'\r\nimport \"./TopRated.scss\";\r\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\"\r\n\r\n\r\n\r\nconst TopRated = () => {\r\n    const api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n    const [topRatedMovies, setTopRatedMovies] = useState([]);\r\n    const [topRatedTV, setTopRatedTV] = useState([]);\r\n    const [movie_page, setMoviePage] = useState(1);\r\n    const [tv_page, setTVPage] = useState(1);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const get_top_movies = () => {\r\n            fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&page=${movie_page}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setTopRatedMovies(oldArray => oldArray.concat(data.results));\r\n                })\r\n\r\n        }\r\n        get_top_movies();\r\n    }, [movie_page]);\r\n\r\n    useEffect(() => {\r\n        const get_top_tv = () => {\r\n            fetch(`https://api.themoviedb.org/3/tv/top_rated?api_key=${api_key}&page=${tv_page}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setTopRatedTV(oldArray => oldArray.concat(data.results));\r\n                    console.log(topRatedTV);\r\n                })\r\n        }\r\n        get_top_tv();\r\n    }, [tv_page])\r\n\r\n\r\n    return (\r\n        <div className=\"top-rated\" >\r\n\r\n            <div className=\"container\">\r\n                <div className=\"legend\">\r\n                    <h3>Top Rated Movies</h3>\r\n                </div>\r\n                <div className=\"items-container\">\r\n                    <MoviesContainer\r\n                        movies={topRatedMovies} />\r\n                </div>\r\n                <button\r\n                    className=\"more\"\r\n                    onClick={() => setMoviePage(movie_page + 1)}\r\n                >\r\n                    Load More ...\r\n                    </button>\r\n            </div>\r\n\r\n            <div className=\"divider\"></div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"legend\">\r\n                    <h3>Top Rated TV Shows</h3>\r\n                </div>\r\n                <div className=\"items-container\">\r\n                    <MoviesContainer\r\n                        movies={topRatedTV} />\r\n                </div>\r\n                <button\r\n                    className=\"more\"\r\n                    onClick={() => setTVPage(tv_page + 1)}\r\n                >\r\n                    Load More ...</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopRated;","import React from 'react';\nimport \"./app.scss\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Nav from './Components/Header/Header';\nimport HomePage from './Components/HomePage/HomePage';\nimport WatchList from './Components/WatchListPage/WatchList';\nimport WatchedList from './Components/WatchedListPage/WatchedList';\nimport Search from './Components/SearchPage/Search';\nimport TopRated from './Components/TopRatedPage/TopRated';\n\nconst App = () => {\n\n\n  return (\n    <Router>\n      <div >\n        <Nav />\n        <Switch>\n\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n\n          <Route path=\"/watchedList\" >\n            <WatchedList />\n          </Route>\n\n          <Route path=\"/watchList\">\n            <WatchList />\n          </Route>\n\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n\n          <Route path=\"/topRated\">\n            <TopRated />\n          </Route>\n\n        </Switch>\n\n      </div>\n    </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}