{"version":3,"sources":["Components/Header/static-bg.jpg","Components/Header/backgrounds sync /^/.*/.jpg$","Components/Header/backgrounds/0.jpg","Components/Header/backgrounds/1.jpg","Components/Header/backgrounds/2.jpg","Components/Header/Header.jsx","Components/HomePage/SearchForm.jsx","Components/MoviesContainer/Movie/Movie.jsx","Components/MoviesContainer/MoviesContainer.jsx","Components/HomePage/HomePage.jsx","Components/WatchListPage/WatchList.jsx","Components/WatchedListPage/WatchedList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Nav","useState","Math","floor","random","source","className","src","require","alt","staticBg","to","Home","AddToQueue","LibraryAddCheck","href","ArrowUpward","useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","fontSize","iconButton","searchIcon","SearchForm","props","classes","Paper","component","InputBase","placeholder","value","searchText","onChange","setSearchText","target","IconButton","type","aria-label","onClick","fetch","then","res","json","data","setMovies","results","Movie","poster","MoviesContainer","movies","filter","item","poster_path","key","HomePage","Button","size","variant","WatchList","WatchedList","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.281273c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/static-bg.253549d8.jpg\";","var map = {\n\t\"./0.jpg\": 51,\n\t\"./1.jpg\": 52,\n\t\"./2.jpg\": 53\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 50;","module.exports = __webpack_public_path__ + \"static/media/0.aa2aa993.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.0af8103e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.578047fd.jpg\";","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Header.scss\";\r\nimport staticBg from \"./static-bg.jpg\"\r\nimport { ArrowUpward, Home, AddToQueue, LibraryAddCheck } from '@material-ui/icons';\r\n\r\n\r\n\r\n\r\nconst Nav = () => {\r\n\r\n    // window.addEventListener(\"scroll\", () => {\r\n\r\n    //     console.log(window.scrollY);\r\n    //     console.log(window.pageYOffset);\r\n    //     console.log(window.outerHeight);\r\n    // })\r\n\r\n    const [source] = useState(Math.floor(Math.random() * 3));\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <header>\r\n            <div className=\"bg\" id=\"header\">\r\n                <img\r\n                    src={require(`./backgrounds/${source}.jpg`)}\r\n                    alt=\"Background\"\r\n                />\r\n            </div>\r\n            <div className=\"static-bg\">\r\n                <img src={staticBg} alt=\"\" />\r\n            </div>\r\n            <nav>\r\n                <div className=\"logo-container\">\r\n                    <div className=\"logo\">\r\n                        <h1><span>My</span>Mdb</h1>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul>\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/\">\r\n                            <i><Home className=\"icon\" /></i>&nbsp; Home\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/watchList\">\r\n                            <i><AddToQueue className=\"icon\" /></i>&nbsp; Watch List\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/watchedList\">\r\n                            <i><LibraryAddCheck className=\"icon\" /></i>&nbsp; Watched\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n            <a href=\"#header\"><div className=\"back-to-top\"> <ArrowUpward className=\"icon\" /> </div></a>\r\n\r\n            <div className=\"divider\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport \"./homePage.scss\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nlet api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '0.6rem 1.5rem',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: \"100%\"\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        fontSize: \"2rem\"\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    searchIcon: {\r\n        fontSize: \"2rem\"\r\n    }\r\n\r\n}));\r\n\r\nconst SearchForm = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const inputHandler = (e) => {\r\n        props.setSearchText(e.target.value);\r\n        // console.log()\r\n    }\r\n\r\n    const searchMovies = (searchText) => {\r\n        // fetch(`https://api.themoviedb.org/3/movie/550?api_key=${api_key}`)\r\n        fetch(`https://api.themoviedb.org/3/search/multi?api_key=${api_key}&query=${searchText}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                props.setMovies(data.results);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-form\" id=\"search-form\" >\r\n            <Paper component=\"form\" className={classes.root}>\r\n                <InputBase\r\n                    className={classes.input}\r\n                    placeholder=\"Search For Movie ...\"\r\n                    value={props.searchText}\r\n                    onChange={inputHandler}\r\n                />\r\n                <IconButton\r\n                    type=\"button\"\r\n                    className={classes.iconButton}\r\n                    aria-label=\"search\"\r\n                    onClick={() => searchMovies(props.searchText)}\r\n                >\r\n                    <SearchIcon\r\n                        className={classes.searchIcon}\r\n                    />\r\n                </IconButton>\r\n\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchForm;\r\n\r\n\r\n// const SearchForm = () => {\r\n//     return (\r\n//         <div className=\"search-form\" id=\"search-form\" >\r\n//             <div className=\"search-bar\">\r\n//                 <label htmlFor=\"search-input\" className=\"search-label\">Search</label>\r\n//                 <input type=\"text\" name=\"search-input\" id=\"search-input\" placeholder=\"Search your Movie ...\" />\r\n//             </div></div>\r\n//     )\r\n// }\r\n\r\n// export default SearchForm;","import React from 'react'\r\nimport \"./Movie.scss\";\r\n\r\n\r\nconst Movie = (props) => {\r\n    return (\r\n        <div className=\"movie\">\r\n            <div className=\"img\">\r\n                <img src={`https://image.tmdb.org/t/p/w500/${props.poster}`} alt=\"poster\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react'\r\nimport \"./MoviesContainer.scss\";\r\nimport Movie from \"./Movie/Movie\"\r\n\r\n\r\nconst MoviesContainer = (props) => {\r\n\r\n    return (\r\n        <div className=\"movies-container\">\r\n            {props.movies.filter(item => item.poster_path).map((item) => (\r\n                <Movie\r\n                    poster={item.poster_path}\r\n                    key={item.id}\r\n                />\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesContainer;","import React from 'react';\r\nimport \"./homePage.scss\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\"\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst HomePage = (props) => {\r\n    return (\r\n        <div className=\"home-page\" >\r\n\r\n            <div className=\"slogan\">\r\n                <div>\r\n                    <h3>Search Your Favourite Movie</h3>\r\n                    <h3>Make your own Watchlist</h3>\r\n                </div>\r\n                <div className=\"btn\">\r\n                    <Button\r\n                        className=\"start-btn\"\r\n                        size=\"large\"\r\n                        variant=\"contained\"\r\n                        href=\"#search-form\"\r\n                    >Start Now\r\n                </Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <SearchForm\r\n                searchText={props.searchText}\r\n                setSearchText={props.setSearchText}\r\n                movies={props.movies}\r\n                setMovies={props.setMovies}\r\n            />\r\n            <MoviesContainer\r\n                movies={props.movies}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react'\r\nimport \"./Watchlist.scss\";\r\n\r\n\r\nconst WatchList = () => {\r\n    return (\r\n        <div className=\"watch-list\" >\r\n            <div className=\"slogan\">\r\n                <h1>Watchlist</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchList;","import React from 'react'\r\nimport \"./WatchedList.scss\";\r\n\r\n\r\n\r\nconst WatchedList = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"watched-list\"  >\r\n            <div className=\"slogan\">\r\n                <h1>Watched List</h1></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchedList;","import React, { useState } from 'react';\nimport \"./app.scss\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Nav from './Components/Header/Header';\nimport HomePage from './Components/HomePage/HomePage';\nimport WatchList from './Components/WatchListPage/WatchList';\nimport WatchedList from './Components/WatchedListPage/WatchedList';\n\nconst App = () => {\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  return (\n    <Router>\n      <div >\n        <Nav />\n        <Switch>\n\n          <Route path=\"/\" exact>\n            <HomePage\n              searchText={searchText}\n              setSearchText={setSearchText}\n              movies={movies}\n              setMovies={setMovies}\n            />\n          </Route>\n\n          <Route path=\"/watchedList\" >\n            <WatchedList />\n          </Route>\n\n          <Route path=\"/watchList\">\n            <WatchList />\n          </Route>\n\n        </Switch>\n\n      </div>\n    </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}