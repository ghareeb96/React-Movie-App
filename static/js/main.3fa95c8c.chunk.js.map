{"version":3,"sources":["Components/Header/static-bg.jpg","Components/Header/Header.jsx","Components/ItemsContainer/Item/Item.jsx","Components/ItemsContainer/ItemsContainer.jsx","Components/HomePage/HomePage.jsx","Components/WatchListPage/WatchList.jsx","Components/FavouritesPage/Favourites.jsx","Components/SearchPage/Search.jsx","Components/TopRatedPage/TopRated.jsx","Components/Movies/Movies.jsx","Components/TVShows/TVShows.jsx","Components/Persons/Persons.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","useEffect","localStorage","getItem","setItem","JSON","stringify","className","src","staticBg","alt","to","Grade","AddToQueue","Star","Item","props","type","id","item","poster_path","profile_path","name","original_name","original_title","first_air_date","known_for_department","ItemsContainer","items","filter","original_language","map","key","title","detailsId","scroll_type","style","top","window","scrollY","HomePage","useState","loading","setLoading","api_key","popularMovies","setPopularMovies","popularTV","setPopularTV","trending","setTrending","fetch","then","res","json","data","results","color","background","customLoading","WatchList","storedItems","parse","old","concat","length","Favourites","useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","fontSize","iconButton","searchIcon","Search","searchedItems","setSearchedItems","searchText","setSearchText","page","setPage","classes","oldArray","Paper","component","InputBase","placeholder","value","onChange","e","target","autoFocus","IconButton","aria-label","onClick","preventDefault","console","log","href","TopRated","movie_page","setMoviePage","tv_page","setTVPage","topRatedMovies","setTopRatedMovies","topRatedTV","setTopRatedTV","Movies","match","movie","getMovie","credits","setCredits","similar","setSimilar","recommends","setRecommends","favourites","setFavourites","watchlist","setWatchlist","params","setId","watchlisted","favourited","cast","genres","backdrop_path","release_date","slice","tagline","overview","time","TVShows","tvShow","getTvShow","season","setSeason","getSeason","season_no","modal","firstRender","seasons","last_air_date","season_number","episodes","index","Persons","person","getPerson","popular","setPopular","App","exact","path","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,uC,gcCsE5BC,EAhEH,WAWR,OATAC,qBAAU,WACqC,OAAvCC,aAAaC,QAAQ,eACrBD,aAAaE,QAAQ,aAAcC,KAAKC,UAAU,KAEZ,OAAtCJ,aAAaC,QAAQ,cACrBD,aAAaE,QAAQ,YAAaC,KAAKC,UAAU,QAMrD,gCACI,yBAAKC,UAAU,aACX,yBAAKC,IAAKC,IAAUC,IAAI,MAE5B,6BACI,yBAAKH,UAAU,kBACX,kBAAC,IAAD,CAAMA,UAAU,QAAQI,GAAG,qBACvB,yBAAKJ,UAAU,QACX,4BAAI,oCAAJ,SAGR,yBAAKA,UAAU,eACX,gEAIR,4BAEI,4BACI,kBAAC,IAAD,CAAMA,UAAU,QAAQI,GAAG,WACvB,2BAAG,kBAAC,IAAD,CAAQJ,UAAU,UADzB,gBAOJ,4BACI,kBAAC,IAAD,CAAMA,UAAU,QAAQI,GAAG,aACvB,2BAAG,kBAACC,EAAA,EAAD,CAAOL,UAAU,UADxB,mBAMJ,4BACI,kBAAC,IAAD,CAAMA,UAAU,QAAQI,GAAG,cACvB,2BAAG,kBAACE,EAAA,EAAD,CAAYN,UAAU,UAD7B,oBAKJ,4BACI,kBAAC,IAAD,CAAMA,UAAU,QAAQI,GAAG,eACvB,2BAAG,kBAACG,EAAA,EAAD,CAAMP,UAAU,UADvB,wB,OCtBTQ,G,kBA9BF,SAACC,GAEV,OACI,yBAAKT,UAAS,eAAUS,EAAMC,MAAQC,GAAE,UAAKF,EAAMG,KAAKD,KACpD,yBAAKX,UAAU,OACVS,EAAMG,KAAKC,YACR,yBAAKZ,IAAG,yCAAoCQ,EAAMG,KAAKC,aAAeV,IAAI,WAE1E,yBAAKF,IAAG,yCAAoCQ,EAAMG,KAAKE,cAAgBX,IAAI,WAE/E,yBAAKH,UAAU,SACX,4BACKS,EAAMG,KAAKG,KACRN,EAAMG,KAAKI,cAAgBP,EAAMG,KAAKI,cAAgBP,EAAMG,KAAKG,KAC/DN,EAAMG,KAAKK,kBAK7B,kBAAC,IAAD,CAAMb,GAAE,WAAMK,EAAMG,KAAKM,eAAiB,UAEtCT,EAAMG,KAAKO,qBAAuB,UAC9B,SAHA,YAGYV,EAAMG,KAAKD,KAE3B,4BAAQX,UAAU,eAAlB,oBCLDoB,EArBQ,SAACX,GAGpB,OACI,yBAAKT,UAAU,mBACVS,EAAMY,MAAMC,QAAO,SAAAV,GAAI,OAAKA,EAAKC,aAAeD,EAAKE,gBACjDQ,QAAO,SAAAV,GAAI,MAA+B,OAA3BA,EAAKW,qBACpBC,KAAI,SAACZ,GAAD,OACD,kBAAC,EAAD,CACIA,KAAMA,EACNF,KAAI,UAAKE,EAAKM,eAAiB,SAC3BN,EAAKO,qBAAuB,SAAW,SAC3CM,IAAG,UAAKb,EAAKD,GAAV,YAAgBC,EAAKG,KAAOH,EAAKG,KAAOH,EAAKc,MAA7C,KACHC,UAAWlB,EAAMkB,eAG7B,yBAAK3B,UAAU,iBAAiBW,GAAE,UAA2B,UAAtBF,EAAMmB,YAA0B,QAAU,MAAQC,MAAO,CAAEC,IAAMC,OAAOC,QAAU,GAAM,U,QCqE5HC,EArFE,WAAO,IAAD,EACWC,oBAAS,GADpB,mBACZC,EADY,KACHC,EADG,KAEbC,EAAU,mCAFG,EAKuBH,mBAAS,IALhC,mBAKZI,EALY,KAKGC,EALH,OAaeL,mBAAS,IAbxB,mBAaZM,EAbY,KAaDC,EAbC,OAqBaP,mBAAS,IArBtB,mBAqBZQ,EArBY,KAqBFC,EArBE,KAqCnB,OAPAjD,qBAAU,WAvBNkD,MAAM,sDAAD,OAAuDP,IACvDQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAiBS,EAAKC,YAMxCL,MAAM,mDAAD,OAAoDP,IACpDQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIP,EAAaO,EAAKC,YAMpCL,MAAM,0DAAD,OAA2DP,IAC3DQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAAYK,EAAKC,YAC9BJ,KAAKT,GAAW,MAQtB,IAIC,oCACI,yBAAKpC,UAAU,aAEX,yBAAKA,UAAU,UACX,qCACA,yEAGJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,UACX,+CAEJ,6BACI,kBAAC,EAAD,CAAgBqB,MAAOiB,MAI/B,yBAAKtC,UAAU,YAEf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,UACX,iDAEJ,6BACI,kBAAC,EAAD,CAAgBqB,MAAOmB,MAI/B,yBAAKxC,UAAU,YAEf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,UACX,mDAEJ,6BACI,kBAAC,EAAD,CAAgBqB,MAAOqB,OAInC,kBAAC,UAAD,CACIQ,MAAM,UACNC,WAAW,UACXC,cAAejB,MC5ChBkB,G,MAnCG,WAAO,IAAD,EAEWnB,mBAAS,IAFpB,mBAEboB,EAFa,KAEAzD,EAFA,KAepB,OAXAH,qBAAU,WACSI,KAAKyD,MAAM5D,aAAaC,QAAQ,cACxC4B,KAAI,SAAAZ,GACPgC,MAAM,gCAAD,OAAiChC,EAAKF,KAAtC,YAA8CE,EAAKD,GAAnD,oBATD,qCAUCkC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAInD,GAAQ,SAAA2D,GAAG,OAAIA,EAAIC,OAAOT,cAGjD,IAKC,yBAAKhD,UAAU,aACa,IAAvBsD,EAAYI,OAAe,GACxB,yBAAK1D,UAAU,aACX,yBAAKA,UAAU,UACX,0CAEJ,6BACI,kBAAC,EAAD,CACIqB,MAAOiC,SCMpBK,G,MAhCI,WAAO,IAAD,EAEUzB,mBAAS,IAFnB,mBAEdoB,EAFc,KAEDzD,EAFC,KAarB,OATAH,qBAAU,WACSI,KAAKyD,MAAM5D,aAAaC,QAAQ,eACxC4B,KAAI,SAAAZ,GACPgC,MAAM,gCAAD,OAAiChC,EAAKF,KAAtC,YAA8CE,EAAKD,GAAnD,oBATD,qCAUCkC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAInD,GAAQ,SAAA2D,GAAG,OAAIA,EAAIC,OAAOT,cAEjD,IAGC,yBAAKhD,UAAU,cACa,IAAvBsD,EAAYI,OAAe,GACxB,yBAAK1D,UAAU,aACX,yBAAKA,UAAU,UACX,2CAEJ,6BACI,kBAAC,EAAD,CACIqB,MAAOiC,S,6DChB7BM,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,gBACTC,QAAS,OACTC,WAAY,SACZC,MAAO,QAEXC,MAAO,CACHC,WAAYP,EAAMQ,QAAQ,GAC1BC,KAAM,EACNC,SAAU,QAEdC,WAAY,CACRT,QAAS,IAEbU,WAAY,CACRF,SAAU,YAsFHG,EAhFA,WAAO,IAAD,EAEyBzC,mBAAS,IAFlC,mBAEV0C,EAFU,KAEKC,EAFL,OAGmB3C,mBAAS,IAH5B,mBAGV4C,EAHU,KAGEC,EAHF,OAIO7C,mBAAS,GAJhB,mBAIV8C,EAJU,KAIJC,EAJI,KAKXC,EAAUtB,IAiChB,OAfAlE,qBAAU,WASO,IAATsF,GAPApC,MAAM,qDAAD,OAjDD,mCAiDC,kBAAuEkC,EAAvE,iBAA0FE,IAC1FnC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF6B,GAAiB,SAAAM,GAAQ,OAAIA,EAAS1B,OAAOT,EAAKC,iBAQ/D,CAAC+B,IAGA,yBAAKhF,UAAU,UACX,yBAAKA,UAAU,eACX,kBAACoF,EAAA,EAAD,CAAOC,UAAU,OAAOrF,UAAWkF,EAAQnB,MACvC,kBAACuB,EAAA,EAAD,CACItF,UAAWkF,EAAQd,MACnBmB,YAAY,kBACZC,MAAOV,EACPW,SAtCC,SAACC,GAClBX,EAAcW,EAAEC,OAAOH,QAsCPI,WAAW,IAEf,kBAACC,EAAA,EAAD,CACInF,KAAK,SACLV,UAAWkF,EAAQT,WACnBqB,aAAW,SACXC,QAAS,SAACL,GACNA,EAAEM,iBAxCtBpD,MAAM,qDAAD,OAtCG,mCAsCH,kBAAuEkC,IACvEjC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF6B,EAAiB7B,EAAKC,SACtBgC,EAAQ,GACRgB,QAAQC,IAAIlD,EAAKC,cAuCT,kBAAC,IAAD,CACIjD,UAAWkF,EAAQR,gBAMN,IAAzBE,EAAclB,OAAe,yBAAK1D,UAAU,aACxC,6BACI,kBAAC,EAAD,CAAgBqB,MAAOuD,EACnBhD,YAAY,WAEpB,yBAAK5B,UAAU,QACX,uBAAGmG,KAAK,SAASJ,QAAS,kBAAMd,EAAQD,EAAO,KAA/C,eAEC,KCtBVoB,G,MA7EE,WACb,IAAM/D,EAAU,mCADG,EAEgBH,mBAAS,GAFzB,mBAEZmE,EAFY,KAEAC,EAFA,OAGUpE,mBAAS,GAHnB,mBAGZqE,EAHY,KAGHC,EAHG,OAIWtE,oBAAS,GAJpB,mBAIZC,EAJY,KAIHC,EAJG,OAQyBF,mBAAS,IARlC,mBAQZuE,EARY,KAQIC,EARJ,KASnBhH,qBAAU,WAEFkD,MAAM,wDAAD,OAAyDP,EAAzD,iBAAyEgE,IACzExD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF0D,GAAkB,SAAAvB,GAAQ,OAAIA,EAAS1B,OAAOT,EAAKC,iBAIhE,CAACoD,IAlBe,MAqBiBnE,mBAAS,IArB1B,mBAqBZyE,EArBY,KAqBAC,EArBA,KAmCnB,OAbAlH,qBAAU,WAEFkD,MAAM,qDAAD,OAAsDP,EAAtD,iBAAsEkE,IACtE1D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF4D,GAAc,SAAAzB,GAAQ,OAAIA,EAAS1B,OAAOT,EAAKC,eAElDJ,KAAKT,GAAW,MAG1B,CAACmE,IAIA,oCACI,yBAAKvG,UAAU,aACX,yBAAKA,UAAU,YAAYW,GAAG,kBAC1B,yBAAKX,UAAU,UACX,iDAEJ,6BACI,kBAAC,EAAD,CACIqB,MAAOoF,EACP7E,YAAY,WAEpB,yBAAK5B,UAAU,QACX,uBAAGmG,KAAK,SAASJ,QAAS,kBAAMO,EAAaD,EAAa,KAA1D,eAIR,yBAAKrG,UAAU,YAEf,yBAAKW,GAAG,cAAcX,UAAU,aAC5B,yBAAKA,UAAU,UACX,mDAEJ,6BACI,kBAAC,EAAD,CACIqB,MAAOsF,EACP/E,YAAY,QAEpB,yBAAK5B,UAAU,QACX,uBAAGmG,KAAK,MAAMJ,QAAS,kBAAMS,EAAUD,EAAU,KAAjD,gBAKZ,kBAAC,UAAD,CACIrD,MAAM,UACNC,WAAW,UACXC,cAAejB,O,OCzEzBE,G,MAAU,oCAqODwE,EAlOA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAGA5E,mBAAS,IAHT,mBAGnB6E,EAHmB,KAGZC,EAHY,OAII9E,mBAAS,IAJb,mBAInB+E,EAJmB,KAIVC,EAJU,OAKIhF,mBAAS,IALb,mBAKnBiF,EALmB,KAKVC,EALU,OAMUlF,mBAAS,IANnB,mBAMnBmF,EANmB,KAMPC,EANO,OAOUpF,mBAAS,IAPnB,mBAOnBqF,EAPmB,KAOPC,EAPO,OAQQtF,mBAAS,IARjB,mBAQnBuF,EARmB,KAQRC,EARQ,OASNxF,mBAAS4E,EAAMa,OAAOhH,IAThB,mBASnBA,EATmB,KASfiH,EATe,OAUI1F,oBAAS,GAVb,mBAUVE,GAVU,WAa1B1C,qBAAU,WACNkI,EAAMd,EAAMa,OAAOhH,MACpB,CAACmG,EAAMa,OAAOhH,KAEjB,IA6BIkH,GAAc,EAClBJ,EAAUjG,KAAI,SAAAZ,GACNA,EAAKD,KAAOmG,EAAMa,OAAOhH,KACzBkH,GAAc,MAItB,IAAIC,GAAa,EACjBP,EAAW/F,KAAI,SAAAZ,GACPA,EAAKD,KAAOmG,EAAMa,OAAOhH,KACzBmH,GAAa,MAwDrB,OA3BApI,qBAAU,WAEqC,OAAvCC,aAAaC,QAAQ,cACrB4H,EAAc,IAEdA,EAAc1H,KAAKyD,MAAM5D,aAAaC,QAAQ,gBAGR,OAAtCD,aAAaC,QAAQ,aACrB8H,EAAa,IAEbA,EAAa5H,KAAKyD,MAAM5D,aAAaC,QAAQ,eAnCjDgD,MAAM,sCAAD,OAAuCjC,EAAvC,oBAAqD0B,IACrDQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIgE,EAAShE,MAI3BJ,MAAM,sCAAD,OAAuCjC,EAAvC,4BAA6D0B,IAC7DQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIkE,EAAWlE,EAAK+E,SAIlCnF,MAAM,sCAAD,OAAuCjC,EAAvC,4BAA6D0B,IAC7DQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIoE,EAAWpE,EAAKC,YAIlCL,MAAM,sCAAD,OAAuCjC,EAAvC,oCAAqE0B,IACrEQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIsE,EAActE,EAAKC,YAChCJ,KAAKT,GAAW,MAqBtB,CAACzB,IAEJjB,qBAAU,WACNC,aAAaE,QAAQ,aAAcC,KAAKC,UAAUwH,MACnD,CAACA,IACJ7H,qBAAU,WACNC,aAAaE,QAAQ,YAAaC,KAAKC,UAAU0H,MAClD,CAACA,IAEAV,EAAMiB,OAEF,oCACI,yBAAKhI,UAAU,iBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKC,IAAG,yCAAoC8G,EAAMkB,kBAEtD,yBAAKjI,UAAU,gBACX,yBAAKA,UAAU,UACX,yBAAKC,IAAG,yCAAoC8G,EAAMlG,aAAeV,IAAI,MAEzE,yBAAKH,UAAU,QACX,4BAAQA,UAAW6H,EAAc,kBAAoB,aAAc9B,QA9FxE,WACM,IAArB0B,EAAU/D,OACVgE,GAAa,SAAAlE,GAAG,4BAAQA,GAAR,CAAa,CAAE7C,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,cAGrC,IADP+G,EAAUnG,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,MACtD+C,QACNgE,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAE9G,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,YACzDf,aAAaE,QAAQ,YAAaC,KAAKC,UAAU0H,MAEjDC,GAAa,SAAAlE,GAAG,OAAIA,EAAIlC,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,SAChEhB,aAAaE,QAAQ,YAAaC,KAAKC,UAAU0H,OAoF4DI,EAAc,oBAAsB,oBACjI,4BAAQ7H,UAAW8H,EAAa,iBAAmB,YAAa/B,QA7G3E,WACa,IAAtBwB,EAAW7D,OACX8D,GAAc,SAAAhE,GAAG,4BAAQA,GAAR,CAAa,CAAE7C,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,cAGtC,IADP6G,EAAWjG,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,MACvD+C,QACN8D,EAAc,GAAD,mBAAKD,GAAL,CAAiB,CAAE5G,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,YAC3Df,aAAaE,QAAQ,aAAcC,KAAKC,UAAUwH,MAElDC,GAAc,SAAAhE,GAAG,OAAIA,EAAIlC,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,SACjEhB,aAAaE,QAAQ,aAAcC,KAAKC,UAAUwH,OAmGkDO,EAAa,YAAc,sBAIvH,yBAAK9H,UAAU,iBAEX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,SACX,sCACQ+G,EAAM9F,eADd,cACkC8F,EAAMmB,aAAaC,MAAM,EAAG,GAD9D,OAKe,KAAlBpB,EAAMqB,QAEH,yBAAKpI,UAAU,WACX,gCAAM+G,EAAMqB,QAAZ,KADJ,KAKA,GAIJ,yBAAKpI,UAAU,UACX,4BACK+G,EAAMiB,OAAOxG,KAAI,SAAAZ,GACd,OAAQ,wBAAIa,IAAKb,EAAKD,IAAMC,EAAKG,WAI5CgG,EAAMsB,SACH,yBAAKrI,UAAU,YACX,yBAAKA,UAAU,QACX,yCAEJ,yBAAKA,UAAU,SACX,2BAAI+G,EAAMsB,YAGhB,GAEc,IAAnBpB,EAAQvD,OAAe,GACpB,yBAAK1D,UAAU,QACX,yBAAKA,UAAU,OACX,qCAEJ,yBAAKA,UAAU,QACX,kBAAC,EAAD,CACIqB,MAAO4F,MAKA,IAAnBE,EAAQzD,OAAe,GACnB,yBAAK1D,UAAU,WACX,yBAAKA,UAAU,OACX,wCAEJ,yBAAKA,UAAU,QACX,kBAAC,EAAD,CACIqB,MAAO8F,MAOD,IAAtBE,EAAW3D,OAAe,GACtB,yBAAK1D,UAAU,cACX,yBAAKA,UAAU,OACX,gDAEJ,yBAAKA,UAAU,QACX,kBAAC,EAAD,CACIqB,MAAOgG,WAgB/C,kBAAC,UAAD,CACInE,MAAM,UACNC,WAAW,UACXmF,KAAM,OC/NhBjG,G,MAAU,oCA+SDkG,EA5SC,SAAC,GAAe,IAAbzB,EAAY,EAAZA,MAAY,EAGC5E,mBAAS,IAHV,mBAGpBsG,EAHoB,KAGZC,EAHY,OAIGvG,mBAAS,IAJZ,mBAIpB+E,EAJoB,KAIXC,EAJW,OAKGhF,mBAAS,IALZ,mBAKpBiF,EALoB,KAKXC,EALW,OAMClF,mBAAS,IANV,mBAMpBwG,EANoB,KAMZC,EANY,OAOSzG,mBAAS,IAPlB,mBAOpBmF,EAPoB,KAORC,EAPQ,OAQSpF,mBAAS,IARlB,mBAQpBqF,EARoB,KAQRC,EARQ,OASOtF,mBAAS,IAThB,mBASpBuF,EAToB,KASTC,EATS,OAUPxF,mBAAS4E,EAAMa,OAAOhH,IAVf,mBAUpBA,EAVoB,KAUhBiH,EAVgB,OAWG1F,oBAAS,GAXZ,mBAWpBC,EAXoB,KAWXC,EAXW,KAa3B1C,qBAAU,WACNkI,EAAMd,EAAMa,OAAOhH,MACpB,CAACmG,EAAMa,OAAOhH,KAEjB,IA6BIkH,GAAc,EAClBJ,EAAUjG,KAAI,SAAAZ,GACNA,EAAKD,KAAOmG,EAAMa,OAAOhH,KACzBkH,GAAc,MAItB,IAAIC,GAAa,EACjBP,EAAW/F,KAAI,SAAAZ,GACPA,EAAKD,KAAOmG,EAAMa,OAAOhH,KACzBmH,GAAa,MAMrB,IAyBMc,EAAY,SAACC,GACfjG,MAAM,mCAAD,OAAoCjC,EAApC,mBAAiDkI,EAAjD,oBAAsExG,IACtEQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI2F,EAAU,CACpBD,OAAQ1F,EACR8F,OAAO,QAIfC,GAAc,EAoClB,OAnCArJ,qBAAU,WACFqJ,EACAA,GAAc,EAEdH,MAEL,CAACF,IAGJhJ,qBAAU,WACqC,OAAvCC,aAAaC,QAAQ,cACrB4H,EAAc,IAEdA,EAAc1H,KAAKyD,MAAM5D,aAAaC,QAAQ,gBAGR,OAAtCD,aAAaC,QAAQ,aACrB8H,EAAa,IAEbA,EAAa5H,KAAKyD,MAAM5D,aAAaC,QAAQ,eArDjDgD,MAAM,mCAAD,OAAoCjC,EAApC,oBAAkD0B,IAClDQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIyF,EAAUzF,MAK5BJ,MAAM,mCAAD,OAAoCjC,EAApC,4BAA0D0B,IAC1DQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIkE,EAAWlE,EAAK+E,SAIlCnF,MAAM,mCAAD,OAAoCjC,EAApC,4BAA0D0B,IAC1DQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIoE,EAAWpE,EAAKC,YAIlCL,MAAM,mCAAD,OAAoCjC,EAApC,oCAAkE0B,IAClEQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIsE,EAActE,EAAKC,YAChCJ,KAAKT,GAAW,MAqCtB,CAACzB,IACJjB,qBAAU,WACNC,aAAaE,QAAQ,aAAcC,KAAKC,UAAUwH,MACnD,CAACA,IACJ7H,qBAAU,WACNC,aAAaE,QAAQ,YAAaC,KAAKC,UAAU0H,MAClD,CAACA,IAIAe,EAAOQ,QAEH,oCAEI,yBAAKhJ,UAAU,cAEX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKC,IAAG,yCAAoCuI,EAAOP,kBAEvD,yBAAKjI,UAAU,gBACX,yBAAKA,UAAU,UACX,yBAAKC,IAAG,yCAAoCuI,EAAO3H,aAAeV,IAAI,MAE1E,yBAAKH,UAAU,QACX,4BAAQA,UAAW6H,EAAc,kBAAoB,aAAc9B,QApHxE,WACM,IAArB0B,EAAU/D,OACVgE,GAAa,SAAAlE,GAAG,4BAAQA,GAAR,CAAa,CAAE7C,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,WAGrC,IADP+G,EAAUnG,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,MACtD+C,QACNgE,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAE9G,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,SACzDf,aAAaE,QAAQ,YAAaC,KAAKC,UAAU0H,MAEjDC,GAAa,SAAAlE,GAAG,OAAIA,EAAIlC,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,SAChEhB,aAAaE,QAAQ,YAAaC,KAAKC,UAAU0H,OA0G4DI,EAAc,oBAAsB,oBACjI,4BAAQ7H,UAAW8H,EAAa,iBAAmB,YAAa/B,QAnI3E,WACa,IAAtBwB,EAAW7D,OACX8D,GAAc,SAAAhE,GAAG,4BAAQA,GAAR,CAAa,CAAE7C,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,WAGtC,IADP6G,EAAWjG,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,MACvD+C,QACN8D,EAAc,GAAD,mBAAKD,GAAL,CAAiB,CAAE5G,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,SAC3Df,aAAaE,QAAQ,aAAcC,KAAKC,UAAUwH,MAElDC,GAAc,SAAAhE,GAAG,OAAIA,EAAIlC,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,SACjEhB,aAAaE,QAAQ,aAAcC,KAAKC,UAAUwH,OAyHkDO,EAAa,YAAc,sBAIvH,yBAAK9H,UAAU,iBAEX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,SACX,sCACQwI,EAAOxH,cADf,cACkCwH,EAAOtH,eAAeiH,MAAM,EAAG,GADjE,cACyEK,EAAOS,cAAcd,MAAM,EAAG,GADvG,OAMJ,yBAAKnI,UAAU,UACX,4BACKwI,EAAOR,OAAOxG,KAAI,SAAAZ,GACf,OAAQ,wBAAIa,IAAKb,EAAKD,IAAMC,EAAKG,WAI5CyH,EAAOH,SACJ,yBAAKrI,UAAU,YACX,yBAAKA,UAAU,QACX,yCAEJ,yBAAKA,UAAU,SACX,2BAAIwI,EAAOH,YAGjB,GACc,IAAnBpB,EAAQvD,OAAe,GACpB,yBAAK1D,UAAU,QACX,yBAAKA,UAAU,OACX,qCAEJ,yBAAKA,UAAU,QACX,kBAAC,EAAD,CACIqB,MAAO4F,MAKO,IAA1BuB,EAAOQ,QAAQtF,OAAe,GAC1B,yBAAK1D,UAAU,WACX,yBAAKA,UAAU,OACX,wCAEJ,yBAAKA,UAAU,QACVwI,EAAOQ,QAAQ1H,QAAO,SAAAV,GAAI,OAAKA,EAAKC,aAAeD,EAAKE,gBACpDU,KAAI,SAAAZ,GAAI,OACL,yBAAKZ,UAAU,SAASyB,IAAKb,EAAKD,GAAIoF,QAAS,kBAC3C6C,EAAUhI,EAAKsI,iBAEf,yBAAKlJ,UAAU,OACX,yBAAKC,IAAG,yCAAoCW,EAAKC,aAAeV,IAAI,WACpE,yBAAKH,UAAU,SACX,4BACKY,EAAKG,cAc9C,yBAAKf,UAAS,0BAAqB0I,EAAOI,MAAQ,OAAS,UACtDJ,EAAOA,OACJ,yBAAK1I,UAAU,SACX,yBAAKA,UAAU,YAAY+F,QAAS,kBAAM4C,EAAU,CAAEG,OAAO,MAA7D,UACA,yBAAK7I,IAAG,yCAAoCyI,EAAOA,OAAO7H,aAAeV,IAAI,KAC7E,yBAAKH,UAAU,iBACX,yBAAKA,UAAU,gBACX,4BAAK0I,EAAOA,OAAO3H,OAEvB,yBAAKf,UAAU,YACX,wCACA,4BACK0I,EAAOA,OAAOS,SAAS3H,KAAI,SAACZ,EAAMwI,GAAP,OACxB,sCAAQA,EAAQ,EAAhB,cAAuBxI,EAAKG,YAIvC2H,EAAOA,OAAOL,SACX,yBAAKrI,UAAU,mBACX,2BAAI0I,EAAOA,OAAOL,WAEpB,KAGZ,IAOa,IAAnBlB,EAAQzD,OAAe,GACnB,yBAAK1D,UAAU,WACX,yBAAKA,UAAU,OACX,wCAEJ,yBAAKA,UAAU,QAEX,kBAAC,EAAD,CACIqB,MAAO8F,MAMD,IAAtBE,EAAW3D,OAAe,GACtB,yBAAK1D,UAAU,cACX,yBAAKA,UAAU,OACX,gDAEJ,yBAAKA,UAAU,QACX,kBAAC,EAAD,CACIqB,MAAOgG,UAU3C,kBAAC,UAAD,CACInE,MAAM,UACNC,WAAW,UACXC,cAAejB,EACfmG,KAAM,OAMd,yBAAKtI,UAAU,gBCvSrBqC,G,MAAU,oCAmJDgH,EAhJC,SAAC,GAAe,IAAbvC,EAAY,EAAZA,MAAY,EAGC5E,mBAAS,IAHV,mBAGpBoH,EAHoB,KAGZC,EAHY,OAIGrH,mBAAS,IAJZ,mBAIpB+E,EAJoB,KAIXC,EAJW,OAKGhF,mBAAS,IALZ,mBAKpBsH,EALoB,KAKXC,EALW,OAMSvH,mBAAS,IANlB,mBAMpBqF,EANoB,KAMRC,EANQ,OAOPtF,mBAAS4E,EAAMa,OAAOhH,IAPf,mBAOpBA,EAPoB,KAOhBiH,EAPgB,OAQG1F,oBAAS,GARZ,mBAQpBC,EARoB,KAQXC,EARW,KAW3B1C,qBAAU,WACNkI,EAAMd,EAAMa,OAAOhH,MACpB,CAACmG,EAAMa,OAAOhH,KAEjB,IAiBImH,GAAa,EACjBP,EAAW/F,KAAI,SAAAZ,GACPA,EAAKD,KAAOmG,EAAMa,OAAOhH,KACzBmH,GAAa,MAsCrB,OAhBApI,qBAAU,WAEqC,OAAvCC,aAAaC,QAAQ,cACrB4H,EAAc,IAEdA,EAAc1H,KAAKyD,MAAM5D,aAAaC,QAAQ,gBAtBlDgD,MAAM,uCAAD,OAAwCjC,EAAxC,oBAAsD0B,IACtDQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIuG,EAAUvG,MACvBH,KAAKT,GAAW,IAIrBQ,MAAM,uCAAD,OAAwCjC,EAAxC,qCAAuE0B,IACvEQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIkE,EAAWlE,EAAK+E,SAGlCnF,MAAM,uDAAD,OAAwDP,IACxDQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIyG,EAAWzG,EAAKC,cAanC,CAACtC,IAEJjB,qBAAU,WACNC,aAAaE,QAAQ,aAAcC,KAAKC,UAAUwH,MACnD,CAACA,IAEAN,EAEI,oCACI,yBAAKjH,UAAU,kBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACX,yBAAKC,IAAG,yCAAoCqJ,EAAOxI,cAAgBX,IAAI,MAE3E,yBAAKH,UAAU,QACX,4BAAQA,UAAW8H,EAAa,iBAAmB,YAAa/B,QAtE3E,WACa,IAAtBwB,EAAW7D,OACX8D,GAAc,SAAAhE,GAAG,4BAAQA,GAAR,CAAa,CAAE7C,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,eAGtC,IADP6G,EAAWjG,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,MACvD+C,QACN8D,EAAc,GAAD,mBAAKD,GAAL,CAAiB,CAAE5G,GAAImG,EAAMa,OAAOhH,GAAID,KAAM,aAC3Df,aAAaE,QAAQ,aAAcC,KAAKC,UAAUwH,MAElDC,GAAc,SAAAhE,GAAG,OAAIA,EAAIlC,QAAO,SAAAV,GAAI,OAAIA,EAAKD,KAAOmG,EAAMa,OAAOhH,SACjEhB,aAAaE,QAAQ,aAAcC,KAAKC,UAAUwH,OA4DkDO,EAAa,YAAc,sBAIvH,yBAAK9H,UAAU,iBAEX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,SACX,4BACKsJ,EAAOvI,OAIZ,yBAAKf,UAAU,WACX,yBAAKA,UAAU,OACX,wCAEJ,yBAAKA,UAAU,QACX,kBAAC,EAAD,CACIqB,MAAO4F,MAOnB,yBAAKjH,UAAU,WACX,yBAAKA,UAAU,OACX,gDAEJ,yBAAKA,UAAU,QACX,kBAAC,EAAD,CACIqB,MAAOmI,UAYvC,kBAAC,UAAD,CACItG,MAAM,UACNC,WAAW,UACXC,cAAejB,EACfmG,KAAM,OAMd,yBAAKtI,UAAU,oBCvFZ0J,EA3CH,WAGV,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,qBAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,eAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAcvE,UAAWwB,IAE3C,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,eAAevE,UAAWkD,IAE5C,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,eAAevE,UAAWgE,QCvClCQ,QACW,cAA7B9H,OAAO+H,SAASC,UAEe,UAA7BhI,OAAO+H,SAASC,UAEhBhI,OAAO+H,SAASC,SAASjD,MACvB,2DCbNkD,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,SD8H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzH,MAAK,SAAA0H,GACjCA,EAAaC,kB","file":"static/js/main.3fa95c8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/static-bg.253549d8.jpg\";","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Header.scss\";\r\nimport staticBg from \"./static-bg.jpg\"\r\nimport { AddToQueue, Star, Search, Grade } from '@material-ui/icons';\r\n\r\nconst Nav = () => {\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"favourites\") === null) {\r\n            localStorage.setItem(\"favourites\", JSON.stringify([]));\r\n        }\r\n        if (localStorage.getItem(\"watchlist\") === null) {\r\n            localStorage.setItem(\"watchlist\", JSON.stringify([]));\r\n        }\r\n\r\n    })\r\n    return (\r\n\r\n        <header>\r\n            <div className=\"static-bg\">\r\n                <img src={staticBg} alt=\"\" />\r\n            </div>\r\n            <nav>\r\n                <div className=\"logo-container\">\r\n                    <Link className=\"links\" to=\"/React-Movie-App/\">\r\n                        <div className=\"logo\">\r\n                            <h1><span>My</span>Mdb</h1>\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"logo-slogan\">\r\n                        <p>Discover something new to Watch</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul>\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/Search\">\r\n                            <i><Search className=\"icon\" /></i>&nbsp;\r\n                            Search\r\n                        </Link>\r\n                    </li>\r\n\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/TopRated\">\r\n                            <i><Grade className=\"icon\" /></i>&nbsp; Top Rated\r\n                        </Link>\r\n                    </li>\r\n\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/WatchList\">\r\n                            <i><AddToQueue className=\"icon\" /></i>&nbsp; Watch List\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/Favourites\">\r\n                            <i><Star className=\"icon\" /></i>&nbsp; Favourites\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\nimport \"./Item.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Item = (props) => {\r\n\r\n    return (\r\n        <div className={`item ${props.type}`} id={`${props.item.id}`}>\r\n            <div className=\"img\">\r\n                {props.item.poster_path ?\r\n                    <img src={`https://image.tmdb.org/t/p/w500${props.item.poster_path}`} alt=\"poster\" />\r\n                    :\r\n                    <img src={`https://image.tmdb.org/t/p/w500${props.item.profile_path}`} alt=\"poster\" />\r\n                }\r\n                <div className=\"popup\">\r\n                    <h2>\r\n                        {props.item.name ?\r\n                            props.item.original_name ? props.item.original_name : props.item.name\r\n                            : props.item.original_title}\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n\r\n            <Link to={`/${props.item.first_air_date ? \"TVShows\" :\r\n                // props.item.episode_count ? `Seasons` :\r\n                props.item.known_for_department ? \"Persons\" :\r\n                    \"Movies\"}/${props.item.id}`}\r\n            >\r\n                <button className=\"details-btn\">More Details</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React from 'react'\r\nimport \"./ItemsContainer.scss\";\r\nimport Item from \"./Item/Item\"\r\n\r\n\r\nconst ItemsContainer = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"items-container\">\r\n            {props.items.filter(item => (item.poster_path || item.profile_path))\r\n                .filter(item => item.original_language !== \"ja\")\r\n                .map((item) => (\r\n                    <Item\r\n                        item={item}\r\n                        type={`${item.first_air_date ? \"tvShow\" :\r\n                            item.known_for_department ? \"person\" : \"movie\"}`}\r\n                        key={`${item.id} ${item.name ? item.name : item.title} `}\r\n                        detailsId={props.detailsId}\r\n                    />\r\n                ))}\r\n            <div className=\"scroll-handler\" id={`${props.scroll_type === \"movie\" ? \"movie\" : \"tv\"}`} style={{ top: (window.scrollY - 94) + \"px\" }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemsContainer;","import React, { useState, useEffect } from 'react';\r\nimport \"./homePage.scss\";\r\nimport ItemsContainer from \"../ItemsContainer/ItemsContainer\"\r\nimport { Planets } from 'react-preloaders';\r\n\r\nconst HomePage = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n    //* =============Popular Movies====================\r\n    const [popularMovies, setPopularMovies] = useState([]);\r\n    const get_popular_movies = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setPopularMovies(data.results))\r\n    }\r\n\r\n    //* ==============Popular TV Shows =======================\r\n    const [popularTV, setPopularTV] = useState([]);\r\n    const get_popular_TV = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/popular?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setPopularTV(data.results))\r\n    }\r\n\r\n    //* ================Trending =============================\r\n    const [trending, setTrending] = useState([]);\r\n    const get_trends = () => {\r\n        fetch(`https://api.themoviedb.org/3/trending/all/week?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setTrending(data.results))\r\n            .then(setLoading(false))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        get_popular_movies();\r\n        get_popular_TV();\r\n        get_trends();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"home-page\" >\r\n\r\n                <div className=\"slogan\">\r\n                    <h2>MyMdb</h2>\r\n                    <h4>Discover, Search and Make Your Watchlist</h4>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"legend\">\r\n                        <h3>Popular Movies</h3>\r\n                    </div>\r\n                    <div>\r\n                        <ItemsContainer items={popularMovies} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"legend\">\r\n                        <h3>Popular TV Shows</h3>\r\n                    </div>\r\n                    <div>\r\n                        <ItemsContainer items={popularTV} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"legend\">\r\n                        <h3>Trending This Week</h3>\r\n                    </div>\r\n                    <div>\r\n                        <ItemsContainer items={trending} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Planets\r\n                color=\"#fdc325\"\r\n                background=\"#011A27\"\r\n                customLoading={loading} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from 'react'\r\nimport \"./Watchlist.scss\";\r\nimport ItemsContainer from \"../ItemsContainer/ItemsContainer\"\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\nconst WatchList = () => {\r\n\r\n    const [storedItems, setItem] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const stored = JSON.parse(localStorage.getItem(\"watchlist\"));\r\n        stored.map(item => {\r\n            fetch(`https://api.themoviedb.org/3/${item.type}/${item.id}?api_key=${api_key}`)\r\n                .then(res => res.json())\r\n                .then(data => setItem(old => old.concat(data)))\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"watchlist\"  >\r\n            {storedItems.length === 0 ? \"\" :\r\n                <div className=\"container\" >\r\n                    <div className=\"legend\">\r\n                        <h3>Watchlist</h3>\r\n                    </div>\r\n                    <div>\r\n                        <ItemsContainer\r\n                            items={storedItems}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchList;","import React, { useState, useEffect } from 'react'\r\nimport \"./Favourites.scss\";\r\nimport ItemsContainer from \"../ItemsContainer/ItemsContainer\"\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\nconst Favourites = () => {\r\n\r\n    const [storedItems, setItem] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const stored = JSON.parse(localStorage.getItem(\"favourites\"));\r\n        stored.map(item => {\r\n            fetch(`https://api.themoviedb.org/3/${item.type}/${item.id}?api_key=${api_key}`)\r\n                .then(res => res.json())\r\n                .then(data => setItem(old => old.concat(data)))\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"favourites\"  >\r\n            {storedItems.length === 0 ? \"\" :\r\n                <div className=\"container\" >\r\n                    <div className=\"legend\">\r\n                        <h3>Favourites</h3>\r\n                    </div>\r\n                    <div>\r\n                        <ItemsContainer\r\n                            items={storedItems}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favourites;","import React, { useState, useEffect } from 'react'\r\nimport \"./Search.scss\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ItemsContainer from \"../ItemsContainer/ItemsContainer\"\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '0.6rem 1.5rem',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: \"100%\"\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        fontSize: \"2rem\"\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    searchIcon: {\r\n        fontSize: \"2rem\"\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const [searchedItems, setSearchedItems] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n    const classes = useStyles();\r\n\r\n\r\n    const inputHandler = (e) => {\r\n        setSearchText(e.target.value);\r\n    }\r\n\r\n    const searchItems = () => {\r\n\r\n        fetch(`https://api.themoviedb.org/3/search/multi?api_key=${api_key}&query=${searchText}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setSearchedItems(data.results);\r\n                setPage(1);\r\n                console.log(data.results)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const search = () => {\r\n            fetch(`https://api.themoviedb.org/3/search/multi?api_key=${api_key}&query=${searchText}&page=${page}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setSearchedItems(oldArray => oldArray.concat(data.results));\r\n                })\r\n\r\n        }\r\n        if (page !== 1) {\r\n            search();\r\n        }\r\n\r\n    }, [page])\r\n\r\n    return (\r\n        <div className=\"search\" >\r\n            <div className=\"search-form\">\r\n                <Paper component=\"form\" className={classes.root}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search here ...\"\r\n                        value={searchText}\r\n                        onChange={inputHandler}\r\n                        autoFocus={true}\r\n                    />\r\n                    <IconButton\r\n                        type=\"submit\"\r\n                        className={classes.iconButton}\r\n                        aria-label=\"search\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault()\r\n                            searchItems(searchText)\r\n                        }}\r\n                    >\r\n                        <SearchIcon\r\n                            className={classes.searchIcon}\r\n                        />\r\n                    </IconButton>\r\n                </Paper>\r\n            </div>\r\n            {\r\n                searchedItems.length !== 0 ? <div className=\"container\">\r\n                    <div>\r\n                        <ItemsContainer items={searchedItems}\r\n                            scroll_type=\"movie\" />\r\n                    </div>\r\n                    <div className=\"more\">\r\n                        <a href=\"#movie\" onClick={() => setPage(page + 1)}>Load More</a>\r\n                    </div>\r\n                </div> : \"\"\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useEffect, useState } from 'react'\r\nimport \"./TopRated.scss\";\r\nimport ItemsContainer from \"../ItemsContainer/ItemsContainer\"\r\nimport { Planets } from 'react-preloaders';\r\n\r\n\r\n\r\nconst TopRated = () => {\r\n    const api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n    const [movie_page, setMoviePage] = useState(1);\r\n    const [tv_page, setTVPage] = useState(1);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n\r\n    const [topRatedMovies, setTopRatedMovies] = useState([]);\r\n    useEffect(() => {\r\n        const get_top_movies = () => {\r\n            fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&page=${movie_page}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setTopRatedMovies(oldArray => oldArray.concat(data.results));\r\n                })\r\n        }\r\n        get_top_movies();\r\n    }, [movie_page]);\r\n\r\n\r\n    const [topRatedTV, setTopRatedTV] = useState([]);\r\n    useEffect(() => {\r\n        const get_top_tv = () => {\r\n            fetch(`https://api.themoviedb.org/3/tv/top_rated?api_key=${api_key}&page=${tv_page}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setTopRatedTV(oldArray => oldArray.concat(data.results));\r\n                })\r\n                .then(setLoading(false))\r\n        }\r\n        get_top_tv();\r\n    }, [tv_page]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top-rated\" >\r\n                <div className=\"container\" id=\"movieContainer\">\r\n                    <div className=\"legend\">\r\n                        <h3>Top Rated Movies</h3>\r\n                    </div>\r\n                    <div>\r\n                        <ItemsContainer\r\n                            items={topRatedMovies}\r\n                            scroll_type=\"movie\" />\r\n                    </div>\r\n                    <div className=\"more\">\r\n                        <a href=\"#movie\" onClick={() => setMoviePage(movie_page + 1)}>Load More</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n                <div id=\"tvContainer\" className=\"container\">\r\n                    <div className=\"legend\">\r\n                        <h3>Top Rated TV Shows</h3>\r\n                    </div>\r\n                    <div>\r\n                        <ItemsContainer\r\n                            items={topRatedTV}\r\n                            scroll_type=\"tv\" />\r\n                    </div>\r\n                    <div className=\"more\">\r\n                        <a href=\"#tv\" onClick={() => setTVPage(tv_page + 1)}>Load More</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Planets\r\n                color=\"#fdc325\"\r\n                background=\"#011A27\"\r\n                customLoading={loading} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopRated;","import React, { useEffect, useState } from 'react'\r\nimport \"./Movies.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Planets } from 'react-preloaders';\r\nimport ItemsContainer from '../ItemsContainer/ItemsContainer';\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n\r\nconst Movies = ({ match }) => {\r\n\r\n\r\n    const [movie, getMovie] = useState({});\r\n    const [credits, setCredits] = useState([]);\r\n    const [similar, setSimilar] = useState([]);\r\n    const [recommends, setRecommends] = useState([]);\r\n    const [favourites, setFavourites] = useState([]);\r\n    const [watchlist, setWatchlist] = useState([]);\r\n    const [id, setId] = useState(match.params.id);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        setId(match.params.id);\r\n    }, [match.params.id])\r\n\r\n    const addToFav = () => {\r\n        if (favourites.length === 0) {\r\n            setFavourites(old => [...old, { id: match.params.id, type: \"movie\" }]);\r\n        } else {\r\n            const found = favourites.filter(item => item.id === match.params.id)\r\n            if (found.length === 0) {\r\n                setFavourites([...favourites, { id: match.params.id, type: \"movie\" }])\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            } else {\r\n                setFavourites(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            }\r\n        }\r\n    }\r\n    const addToWatchlist = () => {\r\n        if (watchlist.length === 0) {\r\n            setWatchlist(old => [...old, { id: match.params.id, type: \"movie\" }]);\r\n        } else {\r\n            const found = watchlist.filter(item => item.id === match.params.id)\r\n            if (found.length === 0) {\r\n                setWatchlist([...watchlist, { id: match.params.id, type: \"movie\" }])\r\n                localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n            } else {\r\n                setWatchlist(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n            }\r\n        }\r\n    }\r\n\r\n    let watchlisted = false;\r\n    watchlist.map(item => {\r\n        if (item.id === match.params.id) {\r\n            watchlisted = true;\r\n        }\r\n    })\r\n\r\n    let favourited = false;\r\n    favourites.map(item => {\r\n        if (item.id === match.params.id) {\r\n            favourited = true;\r\n        }\r\n    })\r\n\r\n    const fetchData = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => getMovie(data))\r\n    }\r\n\r\n    const getCredits = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setCredits(data.cast))\r\n    }\r\n\r\n    const getSimilar = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setSimilar(data.results))\r\n    }\r\n\r\n    const getRecommends = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setRecommends(data.results))\r\n            .then(setLoading(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"favourites\") === null) {\r\n            setFavourites([]);\r\n        } else {\r\n            setFavourites(JSON.parse(localStorage.getItem(\"favourites\")))\r\n        }\r\n\r\n        if (localStorage.getItem(\"watchlist\") === null) {\r\n            setWatchlist([]);\r\n        } else {\r\n            setWatchlist(JSON.parse(localStorage.getItem(\"watchlist\")))\r\n        }\r\n\r\n        fetchData();\r\n        getCredits();\r\n        getSimilar();\r\n        getRecommends();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n    }, [favourites])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n    }, [watchlist])\r\n\r\n    if (movie.genres) {\r\n        return (\r\n            <>\r\n                <div className=\"movie-details\">\r\n                    <div className=\"details\">\r\n                        <div className=\"bg-img\">\r\n                            <img src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`} />\r\n                        </div>\r\n                        <div className=\"left-section\">\r\n                            <div className=\"poster\">\r\n                                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"btns\">\r\n                                <button className={watchlisted ? \"watch-list done\" : \"watch-list\"} onClick={addToWatchlist}>{watchlisted ? \"In Your Watchlist\" : \"Add To Watchlist\"}</button>\r\n                                <button className={favourited ? \"favourite done\" : \"favourite\"} onClick={addToFav}>{favourited ? \"Favourite\" : \"Add To Favourite\"}</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"right-section\">\r\n\r\n                            <div className=\"right-details\">\r\n                                <div className=\"title\">\r\n                                    <h1>\r\n                                        {`${movie.original_title}  (${movie.release_date.slice(0, 4)})`}\r\n                                    </h1>\r\n                                </div>\r\n\r\n                                {movie.tagline !== \"\" ?\r\n\r\n                                    <div className=\"tagline\">\r\n                                        <h2>\"{movie.tagline}\"</h2>\"\r\n                                    </div>\r\n\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n\r\n\r\n                                <div className=\"genres\">\r\n                                    <ul>\r\n                                        {movie.genres.map(item => {\r\n                                            return (<li key={item.id} >{item.name}</li>)\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                {movie.overview ?\r\n                                    <div className=\"overview\">\r\n                                        <div className=\"left\">\r\n                                            <h2>Overview</h2>\r\n                                        </div>\r\n                                        <div className=\"right\">\r\n                                            <p>{movie.overview}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    : \"\"}\r\n\r\n                                {credits.length === 0 ? \"\" :\r\n                                    <div className=\"cast\">\r\n                                        <div className=\"top\">\r\n                                            <h2>Cast</h2>\r\n                                        </div>\r\n                                        <div className=\"body\">\r\n                                            <ItemsContainer\r\n                                                items={credits} />\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    similar.length === 0 ? \"\" :\r\n                                        <div className=\"similar\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Similar</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                <ItemsContainer\r\n                                                    items={similar}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                                {\r\n                                    recommends.length === 0 ? \"\" :\r\n                                        <div className=\"recommends\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Recommendations</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                <ItemsContainer\r\n                                                    items={recommends} />\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <Planets\r\n                color=\"#fdc325\"\r\n                background=\"#011A27\"\r\n                time={2000} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Movies;","import React, { useEffect, useState, useRef } from 'react'\r\nimport \"./TVShows.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Planets } from 'react-preloaders';\r\nimport ItemsContainer from '../ItemsContainer/ItemsContainer';\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n\r\nconst TVShows = ({ match }) => {\r\n\r\n\r\n    const [tvShow, getTvShow] = useState({});\r\n    const [credits, setCredits] = useState([]);\r\n    const [similar, setSimilar] = useState([]);\r\n    const [season, setSeason] = useState({});\r\n    const [recommends, setRecommends] = useState([]);\r\n    const [favourites, setFavourites] = useState([]);\r\n    const [watchlist, setWatchlist] = useState([]);\r\n    const [id, setId] = useState(match.params.id);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setId(match.params.id);\r\n    }, [match.params.id])\r\n\r\n    const addToFav = () => {\r\n        if (favourites.length === 0) {\r\n            setFavourites(old => [...old, { id: match.params.id, type: \"tv\" }]);\r\n        } else {\r\n            const found = favourites.filter(item => item.id === match.params.id)\r\n            if (found.length === 0) {\r\n                setFavourites([...favourites, { id: match.params.id, type: \"tv\" }])\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            } else {\r\n                setFavourites(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            }\r\n        }\r\n    }\r\n    const addToWatchlist = () => {\r\n        if (watchlist.length === 0) {\r\n            setWatchlist(old => [...old, { id: match.params.id, type: \"tv\" }]);\r\n        } else {\r\n            const found = watchlist.filter(item => item.id === match.params.id)\r\n            if (found.length === 0) {\r\n                setWatchlist([...watchlist, { id: match.params.id, type: \"tv\" }])\r\n                localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n            } else {\r\n                setWatchlist(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n            }\r\n        }\r\n    }\r\n\r\n    let watchlisted = false;\r\n    watchlist.map(item => {\r\n        if (item.id === match.params.id) {\r\n            watchlisted = true;\r\n        }\r\n    })\r\n\r\n    let favourited = false;\r\n    favourites.map(item => {\r\n        if (item.id === match.params.id) {\r\n            favourited = true;\r\n        }\r\n    })\r\n\r\n\r\n\r\n    const fetchData = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => getTvShow(data))\r\n        // .then(setSeasons(tvShow.seasons))\r\n    }\r\n\r\n    const getCredits = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/${id}/credits?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setCredits(data.cast))\r\n    }\r\n\r\n    const getSimilar = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/${id}/similar?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setSimilar(data.results))\r\n    }\r\n\r\n    const getRecommends = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/${id}/recommendations?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setRecommends(data.results))\r\n            .then(setLoading(false))\r\n    }\r\n    const getSeason = (season_no) => {\r\n        fetch(`https://api.themoviedb.org/3/tv/${id}/season/${season_no}?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setSeason({\r\n                season: data,\r\n                modal: true\r\n            }))\r\n        // .then(season => console.log(season))\r\n    }\r\n    let firstRender = true;\r\n    useEffect(() => {\r\n        if (firstRender) {\r\n            firstRender = false;\r\n        } else {\r\n            getSeason();\r\n        }\r\n    }, [season])\r\n\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"favourites\") === null) {\r\n            setFavourites([]);\r\n        } else {\r\n            setFavourites(JSON.parse(localStorage.getItem(\"favourites\")))\r\n        }\r\n\r\n        if (localStorage.getItem(\"watchlist\") === null) {\r\n            setWatchlist([]);\r\n        } else {\r\n            setWatchlist(JSON.parse(localStorage.getItem(\"watchlist\")))\r\n        }\r\n        fetchData();\r\n        getCredits();\r\n        getSimilar();\r\n        getRecommends();\r\n    }, [id])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n    }, [favourites])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n    }, [watchlist])\r\n\r\n\r\n\r\n    if (tvShow.seasons) {\r\n        return (\r\n            <>\r\n\r\n                <div className=\"tv-details\">\r\n\r\n                    <div className=\"details\">\r\n                        <div className=\"bg-img\">\r\n                            <img src={`https://image.tmdb.org/t/p/w500${tvShow.backdrop_path}`} />\r\n                        </div>\r\n                        <div className=\"left-section\">\r\n                            <div className=\"poster\">\r\n                                <img src={`https://image.tmdb.org/t/p/w500${tvShow.poster_path}`} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"btns\">\r\n                                <button className={watchlisted ? \"watch-list done\" : \"watch-list\"} onClick={addToWatchlist}>{watchlisted ? \"In Your Watchlist\" : \"Add To Watchlist\"}</button>\r\n                                <button className={favourited ? \"favourite done\" : \"favourite\"} onClick={addToFav}>{favourited ? \"Favourite\" : \"Add To Favourite\"}</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"right-section\">\r\n\r\n                            <div className=\"right-details\">\r\n                                <div className=\"title\">\r\n                                    <h1>\r\n                                        {`${tvShow.original_name}  (${tvShow.first_air_date.slice(0, 4)} - ${tvShow.last_air_date.slice(0, 4)})`}\r\n                                    </h1>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"genres\">\r\n                                    <ul>\r\n                                        {tvShow.genres.map(item => {\r\n                                            return (<li key={item.id} >{item.name}</li>)\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                {tvShow.overview ?\r\n                                    <div className=\"overview\">\r\n                                        <div className=\"left\">\r\n                                            <h2>Overview</h2>\r\n                                        </div>\r\n                                        <div className=\"right\">\r\n                                            <p>{tvShow.overview}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    : \"\"}\r\n                                {credits.length === 0 ? \"\" :\r\n                                    <div className=\"cast\">\r\n                                        <div className=\"top\">\r\n                                            <h2>Cast</h2>\r\n                                        </div>\r\n                                        <div className=\"body\">\r\n                                            <ItemsContainer\r\n                                                items={credits} />\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    tvShow.seasons.length === 0 ? \"\" :\r\n                                        <div className=\"seasons\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Seasons</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                {tvShow.seasons.filter(item => (item.poster_path || item.profile_path))\r\n                                                    .map(item => (\r\n                                                        <div className=\"season\" key={item.id} onClick={() =>\r\n                                                            getSeason(item.season_number)\r\n                                                        }>\r\n                                                            <div className=\"img\">\r\n                                                                <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`} alt=\"poster\" />\r\n                                                                <div className=\"popup\">\r\n                                                                    <h2>\r\n                                                                        {item.name}\r\n                                                                    </h2>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                }\r\n\r\n\r\n\r\n                                <div className={`modal-container ${season.modal ? \"open\" : \"close\"}`}>\r\n                                    {season.season ?\r\n                                        <div className=\"modal\">\r\n                                            <div className=\"close-btn\" onClick={() => setSeason({ modal: false })}>&#10005;</div>\r\n                                            <img src={`https://image.tmdb.org/t/p/w500${season.season.poster_path}`} alt=\"\" />\r\n                                            <div className=\"modal-details\">\r\n                                                <div className=\"season-title\">\r\n                                                    <h1>{season.season.name}</h1>\r\n                                                </div>\r\n                                                <div className=\"episodes\">\r\n                                                    <h1>Episodes</h1>\r\n                                                    <ul>\r\n                                                        {season.season.episodes.map((item, index) => (\r\n                                                            <li>{`${index + 1} : ${item.name}`}</li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                </div>\r\n                                                {season.season.overview ?\r\n                                                    <div className=\"season-overview\">\r\n                                                        <p>{season.season.overview}</p>\r\n                                                    </div>\r\n                                                    : \"\"}\r\n                                            </div>\r\n                                        </div>\r\n                                        : \"\"}\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                {\r\n                                    similar.length === 0 ? \"\" :\r\n                                        <div className=\"similar\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Similar</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n\r\n                                                <ItemsContainer\r\n                                                    items={similar} />\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                                {\r\n                                    recommends.length === 0 ? \"\" :\r\n                                        <div className=\"recommends\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Recommendations</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                <ItemsContainer\r\n                                                    items={recommends} />\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <Planets\r\n                    color=\"#fdc325\"\r\n                    background=\"#011A27\"\r\n                    customLoading={loading}\r\n                    time={2000} />\r\n            </>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <div className=\"tv-details\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TVShows;","import React, { useEffect, useState } from 'react'\r\nimport \"./Persons.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Planets } from 'react-preloaders';\r\nimport ItemsContainer from '../ItemsContainer/ItemsContainer';\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n\r\nconst Persons = ({ match }) => {\r\n\r\n\r\n    const [person, getPerson] = useState({});\r\n    const [credits, setCredits] = useState([]);\r\n    const [popular, setPopular] = useState([]);\r\n    const [favourites, setFavourites] = useState([]);\r\n    const [id, setId] = useState(match.params.id);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        setId(match.params.id);\r\n    }, [match.params.id])\r\n\r\n    const addToFav = () => {\r\n        if (favourites.length === 0) {\r\n            setFavourites(old => [...old, { id: match.params.id, type: \"person\" }]);\r\n        } else {\r\n            const found = favourites.filter(item => item.id === match.params.id)\r\n            if (found.length === 0) {\r\n                setFavourites([...favourites, { id: match.params.id, type: \"person\" }])\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            } else {\r\n                setFavourites(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let favourited = false;\r\n    favourites.map(item => {\r\n        if (item.id === match.params.id) {\r\n            favourited = true;\r\n        }\r\n    })\r\n\r\n    const fetchData = () => {\r\n        fetch(`https://api.themoviedb.org/3/person/${id}?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => getPerson(data))\r\n            .then(setLoading(false))\r\n    }\r\n\r\n    const getCredits = () => {\r\n        fetch(`https://api.themoviedb.org/3/person/${id}/combined_credits?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setCredits(data.cast))\r\n    }\r\n    const getPopular = () => {\r\n        fetch(`https://api.themoviedb.org/3/person/popular?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setPopular(data.results))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"favourites\") === null) {\r\n            setFavourites([]);\r\n        } else {\r\n            setFavourites(JSON.parse(localStorage.getItem(\"favourites\")))\r\n        }\r\n        fetchData();\r\n        getCredits();\r\n        getPopular();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n    }, [favourites])\r\n\r\n    if (credits) {\r\n        return (\r\n            <>\r\n                <div className=\"person-details\">\r\n                    <div className=\"details\">\r\n                        <div className=\"bg-img\">\r\n                        </div>\r\n                        <div className=\"left-section\">\r\n                            <div className=\"poster\">\r\n                                <img src={`https://image.tmdb.org/t/p/w500${person.profile_path}`} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"btns\">\r\n                                <button className={favourited ? \"favourite done\" : \"favourite\"} onClick={addToFav}>{favourited ? \"Favourite\" : \"Add To Favourite\"}</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"right-section\">\r\n\r\n                            <div className=\"right-details\">\r\n                                <div className=\"title\">\r\n                                    <h1>\r\n                                        {person.name}\r\n                                    </h1>\r\n                                </div>\r\n                                {\r\n                                    <div className=\"credits\">\r\n                                        <div className=\"top\">\r\n                                            <h2>Credits</h2>\r\n                                        </div>\r\n                                        <div className=\"body\">\r\n                                            <ItemsContainer\r\n                                                items={credits} />\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                                {\r\n                                    <div className=\"popular\">\r\n                                        <div className=\"top\">\r\n                                            <h2>Popular Persons</h2>\r\n                                        </div>\r\n                                        <div className=\"body\">\r\n                                            <ItemsContainer\r\n                                                items={popular} />\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <Planets\r\n                    color=\"#fdc325\"\r\n                    background=\"#011A27\"\r\n                    customLoading={loading}\r\n                    time={2000} />\r\n            </>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"person-details\"></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Persons;","import React from 'react';\nimport \"./app.scss\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Header from './Components/Header/Header';\nimport HomePage from './Components/HomePage/HomePage';\nimport WatchList from './Components/WatchListPage/WatchList';\nimport Favourites from './Components/FavouritesPage/Favourites';\nimport Search from './Components/SearchPage/Search';\nimport TopRated from './Components/TopRatedPage/TopRated';\nimport Movies from './Components/Movies/Movies';\nimport TVShows from './Components/TVShows/TVShows';\nimport Persons from './Components/Persons/Persons';\n\n\nconst App = () => {\n\n\n  return (\n    <div >\n      <Router>\n        <Header />\n        <Switch>\n\n          <Route exact path=\"/React-Movie-App/\" >\n            <HomePage />\n          </Route>\n\n          <Route exact path=\"/Favourites\" >\n            <Favourites />\n          </Route>\n\n          <Route exact path=\"/WatchList\">\n            <WatchList />\n          </Route>\n\n          <Route exact path=\"/Search\">\n            <Search />\n          </Route>\n\n          <Route exact path=\"/TopRated\">\n            <TopRated />\n          </Route>\n\n          <Route exact path=\"/Movies/:id\" component={Movies} />\n\n          <Route exact path=\"/TVShows/:id\" component={TVShows} />\n\n          <Route exact path=\"/Persons/:id\" component={Persons} />\n\n        </Switch>\n\n      </Router>\n\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}