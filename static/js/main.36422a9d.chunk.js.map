{"version":3,"sources":["Components/Header/static-bg.jpg","Components/Header/Header.jsx","Components/MoviesContainer/Movie/Movie.jsx","Components/MoviesContainer/MoviesContainer.jsx","Components/HomePage/HomePage.jsx","Components/WatchListPage/WatchList.jsx","Components/WatchedListPage/WatchedList.jsx","Components/SearchPage/Search.jsx","Components/TopRatedPage/TopRated.jsx","Components/MovieDetails/MovieDetails.jsx","Components/TVDetails/TVDetails.jsx","Components/Person/Person.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","useEffect","localStorage","getItem","setItem","JSON","stringify","className","src","staticBg","alt","to","Grade","AddToQueue","LibraryAddCheck","Movie","props","id","movie","poster_path","profile_path","first_air_date","known_for_department","MoviesContainer","movies","filter","item","original_language","map","key","type","style","top","window","scrollY","HomePage","useState","loading","setLoading","api_key","popularMovies","setPopularMovies","popularTV","setPopularTV","trending","setTrending","fetch","then","res","json","data","results","color","background","customLoading","WatchList","setMovies","tvShows","setTvShows","parse","old","concat","length","WatchedList","useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","fontSize","iconButton","searchIcon","Search","searchedItems","setSearchedItems","searchText","setSearchText","page","setPage","classes","oldArray","Paper","component","InputBase","placeholder","value","onChange","e","target","autoFocus","IconButton","aria-label","onClick","preventDefault","console","log","href","TopRated","topRatedMovies","setTopRatedMovies","topRatedTV","setTopRatedTV","movie_page","setMoviePage","tv_page","setTVPage","MovieDetails","match","getMovie","credits","setCredits","similar","setSimilar","recommends","setRecommends","favourites","setFavourites","watchlist","setWatchlist","params","setId","watchlisted","favourited","cast","genres","backdrop_path","title","release_date","slice","tagline","name","overview","index","character","time","TVDetails","tvShow","getTvShow","last_air_date","seasons","Person","person","getPerson","crew","App","exact","path","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36422a9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/static-bg.253549d8.jpg\";","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Header.scss\";\r\nimport staticBg from \"./static-bg.jpg\"\r\nimport { AddToQueue, LibraryAddCheck, Search, Grade } from '@material-ui/icons';\r\n\r\nconst Nav = () => {\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"favourites\") === null) {\r\n            localStorage.setItem(\"favourites\", JSON.stringify([]));\r\n        }\r\n        if (localStorage.getItem(\"watchlist\") === null) {\r\n            localStorage.setItem(\"watchlist\", JSON.stringify([]));\r\n        }\r\n\r\n    })\r\n    return (\r\n\r\n        <header>\r\n            <div className=\"static-bg\">\r\n                <img src={staticBg} alt=\"\" />\r\n            </div>\r\n            <nav>\r\n                <div className=\"logo-container\">\r\n                    <Link className=\"links\" to=\"/React-Movie-App/\">\r\n                        <div className=\"logo\">\r\n                            <h1><span>My</span>Mdb</h1>\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"logo-slogan\">\r\n                        <p>Discover something new to Watch</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul>\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/search\">\r\n                            <i><Search className=\"icon\" /></i>&nbsp;\r\n                            Search\r\n                        </Link>\r\n                    </li>\r\n\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/topRated\">\r\n                            <i><Grade className=\"icon\" /></i>&nbsp; Top Rated\r\n                        </Link>\r\n                    </li>\r\n\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/watchList\">\r\n                            <i><AddToQueue className=\"icon\" /></i>&nbsp; Watch List\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link className=\"links\" to=\"/watchedList\">\r\n                            <i><LibraryAddCheck className=\"icon\" /></i>&nbsp; Watched\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\nimport \"./Movie.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { Waypoint } from 'react-waypoint';\r\n\r\n\r\n\r\n\r\nconst Movie = (props) => {\r\n    return (\r\n        <div className=\"movie\" id={`${props.movie.id}`}>\r\n\r\n            <div className=\"img\">\r\n                {props.movie.poster_path ?\r\n                    <img src={`https://image.tmdb.org/t/p/w500${props.movie.poster_path}`} alt=\"poster\" />\r\n                    :\r\n                    <img src={`https://image.tmdb.org/t/p/w500${props.movie.profile_path}`} alt=\"poster\" />\r\n\r\n                }\r\n            </div>\r\n\r\n            <Link to={`/${props.movie.first_air_date ? \"TVDetails\" :\r\n                props.movie.known_for_department ? \"Person\" : \"movieDetails\"}/${props.movie.id}`}>\r\n                <button className=\"details-btn\">More Details</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react'\r\nimport \"./MoviesContainer.scss\";\r\nimport Movie from \"./Movie/Movie\"\r\n\r\n\r\nconst MoviesContainer = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"movies-container\">\r\n            {props.movies.filter(item => (item.poster_path || item.profile_path))\r\n                .filter(item => item.original_language !== \"ja\")\r\n                .map((item) => (\r\n                    <Movie\r\n                        movie={item}\r\n                        key={item.id}\r\n                    />\r\n                ))}\r\n            <div className=\"scroll-handler\" id={`${props.type === \"movie\" ? \"movie\" : \"tv\"}`} style={{ top: (window.scrollY - 94) + \"px\" }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesContainer;","import React, { useState, useEffect } from 'react';\r\nimport \"./homePage.scss\";\r\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\"\r\nimport { Planets } from 'react-preloaders';\r\n\r\nconst HomePage = () => {\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n    //* =============Popular Movies====================\r\n\r\n    const [popularMovies, setPopularMovies] = useState([]);\r\n    const popular_movies = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setPopularMovies(data.results))\r\n    }\r\n\r\n\r\n    //* ==============Popular TV Shows =======================\r\n    const [popularTV, setPopularTV] = useState([]);\r\n    const popular_TV = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/popular?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setPopularTV(data.results))\r\n    }\r\n\r\n\r\n    //* ================Trending =============================\r\n    const [trending, setTrending] = useState([]);\r\n    const trends = () => {\r\n        fetch(`https://api.themoviedb.org/3/trending/all/week?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setTrending(data.results))\r\n            .then(setLoading(false))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        popular_movies();\r\n        popular_TV();\r\n        trends();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"home-page\" >\r\n\r\n                <div className=\"slogan\">\r\n                    <h2>Welcome To MyMdb</h2>\r\n                    <h2>Discover, Search and Make Your Watchlist</h2>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"legend\">\r\n                        <h3>Popular Movies</h3>\r\n                    </div>\r\n                    <div className=\"items-container\">\r\n                        <MoviesContainer movies={popularMovies} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"legend\">\r\n                        <h3>Popular TV Shows</h3>\r\n                    </div>\r\n                    <div className=\"items-container\">\r\n                        <MoviesContainer movies={popularTV} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"legend\">\r\n                        <h3>Trending This Week</h3>\r\n                    </div>\r\n                    <div className=\"items-container\">\r\n                        <MoviesContainer movies={trending} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Planets\r\n                color=\"#fdc325\"\r\n                background=\"#011A27\"\r\n                customLoading={loading} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from 'react'\r\nimport \"./Watchlist.scss\";\r\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\"\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\nconst WatchList = () => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [tvShows, setTvShows] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const storedMovies = JSON.parse(localStorage.getItem(\"watchlistMovies\"));\r\n        storedMovies.map(item => {\r\n            fetch(`https://api.themoviedb.org/3/movie/${item}?api_key=${api_key}`)\r\n                .then(res => res.json())\r\n                .then(data => setMovies(old => old.concat(data)))\r\n        })\r\n\r\n\r\n        const storedTvShows = JSON.parse(localStorage.getItem(\"watchlistTV\"));\r\n        storedTvShows.map(item => {\r\n            fetch(`https://api.themoviedb.org/3/tv/${item}?api_key=${api_key}`)\r\n                .then(res => res.json())\r\n                .then(data => setTvShows(old => old.concat(data)))\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"watch-list\" >\r\n            {movies.length === 0 ? \"\" :\r\n                <div className=\"container\" >\r\n                    <div className=\"legend\">\r\n                        <h3>Movies Watchlist</h3>\r\n                    </div>\r\n                    <div className=\"items-container\">\r\n                        <MoviesContainer\r\n                            movies={movies}\r\n                            type=\"movie\" />\r\n                    </div>\r\n                </div>\r\n            }\r\n            {tvShows.length === 0 ? \"\" :\r\n                <div className=\"container\" >\r\n                    <div className=\"legend\">\r\n                        <h3>TV Shows Watchlist</h3>\r\n                    </div>\r\n                    <div className=\"items-container\">\r\n                        <MoviesContainer\r\n                            movies={tvShows}\r\n                            type=\"tv\" />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchList;","import React, { useState, useEffect } from 'react'\r\nimport \"./WatchedList.scss\";\r\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\"\r\n\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\nconst WatchedList = () => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [tvShows, setTvShows] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const storedMovies = JSON.parse(localStorage.getItem(\"watchedMovies\"));\r\n        storedMovies.map(item => {\r\n            fetch(`https://api.themoviedb.org/3/movie/${item}?api_key=${api_key}`)\r\n                .then(res => res.json())\r\n                .then(data => setMovies(old => old.concat(data)))\r\n        })\r\n\r\n\r\n        const storedTvShows = JSON.parse(localStorage.getItem(\"watchedTV\"));\r\n        storedTvShows.map(item => {\r\n            fetch(`https://api.themoviedb.org/3/tv/${item}?api_key=${api_key}`)\r\n                .then(res => res.json())\r\n                .then(data => setTvShows(old => old.concat(data)))\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"watched-list\"  >\r\n            {movies.length === 0 ? \"\" :\r\n                <div className=\"container\" >\r\n                    <div className=\"legend\">\r\n                        <h3>Watched Movies</h3>\r\n                    </div>\r\n                    <div className=\"items-container\">\r\n                        <MoviesContainer\r\n                            movies={movies}\r\n                            type=\"movie\" />\r\n                    </div>\r\n                </div>\r\n            }\r\n            {tvShows.length === 0 ? \"\" :\r\n                <div className=\"container\" >\r\n                    <div className=\"legend\">\r\n                        <h3>Watched TV Shows</h3>\r\n                    </div>\r\n                    <div className=\"items-container\">\r\n                        <MoviesContainer\r\n                            movies={tvShows}\r\n                            type=\"tv\" />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchedList;","import React, { useState, useEffect } from 'react'\r\nimport \"./Search.scss\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\"\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '0.6rem 1.5rem',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: \"100%\"\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        fontSize: \"2rem\"\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    searchIcon: {\r\n        fontSize: \"2rem\"\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const [searchedItems, setSearchedItems] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n    const classes = useStyles();\r\n\r\n\r\n    const inputHandler = (e) => {\r\n        setSearchText(e.target.value);\r\n    }\r\n\r\n    const searchItems = () => {\r\n\r\n        fetch(`https://api.themoviedb.org/3/search/multi?api_key=${api_key}&query=${searchText}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setSearchedItems(data.results);\r\n                setPage(1);\r\n                console.log(data.results)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const search = () => {\r\n            fetch(`https://api.themoviedb.org/3/search/multi?api_key=${api_key}&query=${searchText}&page=${page}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setSearchedItems(oldArray => oldArray.concat(data.results));\r\n                })\r\n\r\n        }\r\n        if (page !== 1) {\r\n            search();\r\n        }\r\n\r\n    }, [page])\r\n\r\n    return (\r\n        <div className=\"search\" >\r\n            <div className=\"search-form\">\r\n                <Paper component=\"form\" className={classes.root}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search for Anything ...\"\r\n                        value={searchText}\r\n                        onChange={inputHandler}\r\n                        autoFocus={true}\r\n                    />\r\n                    <IconButton\r\n                        type=\"submit\"\r\n                        className={classes.iconButton}\r\n                        aria-label=\"search\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault()\r\n                            searchItems(searchText)\r\n                        }}\r\n                    >\r\n                        <SearchIcon\r\n                            className={classes.searchIcon}\r\n                        />\r\n                    </IconButton>\r\n                </Paper>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"items-container\">\r\n                    <MoviesContainer movies={searchedItems}\r\n                        type=\"movie\" />\r\n                </div>\r\n                <div className=\"more\">\r\n                    <a href=\"#movie\" onClick={() => setPage(page + 1)}>Load More</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useEffect, useState } from 'react'\r\nimport \"./TopRated.scss\";\r\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\"\r\nimport { Planets } from 'react-preloaders';\r\n\r\n\r\n\r\nconst TopRated = () => {\r\n    const api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n    const [topRatedMovies, setTopRatedMovies] = useState([]);\r\n    const [topRatedTV, setTopRatedTV] = useState([]);\r\n    const [movie_page, setMoviePage] = useState(1);\r\n    const [tv_page, setTVPage] = useState(1);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        const get_top_movies = () => {\r\n            fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&page=${movie_page}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setTopRatedMovies(oldArray => oldArray.concat(data.results));\r\n                })\r\n\r\n\r\n        }\r\n        get_top_movies();\r\n    }, [movie_page]);\r\n\r\n    useEffect(() => {\r\n        const get_top_tv = () => {\r\n            fetch(`https://api.themoviedb.org/3/tv/top_rated?api_key=${api_key}&page=${tv_page}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setTopRatedTV(oldArray => oldArray.concat(data.results));\r\n                })\r\n                .then(setLoading(false))\r\n        }\r\n        get_top_tv();\r\n    }, [tv_page]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top-rated\" >\r\n\r\n                <div className=\"container\" id=\"movieContainer\">\r\n                    <div className=\"legend\">\r\n                        <h3>Top Rated Movies</h3>\r\n                    </div>\r\n                    <div className=\"items-container\">\r\n                        <MoviesContainer\r\n                            movies={topRatedMovies}\r\n                            type=\"movie\" />\r\n                    </div>\r\n                    <div className=\"more\">\r\n                        <a href=\"#movie\" onClick={() => setMoviePage(movie_page + 1)}>Load More</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"divider\"></div>\r\n\r\n                <div id=\"tvContainer\" className=\"container\">\r\n                    <div className=\"legend\">\r\n                        <h3>Top Rated TV Shows</h3>\r\n                    </div>\r\n                    <div className=\"items-container\">\r\n                        <MoviesContainer\r\n                            movies={topRatedTV}\r\n                            type=\"tv\" />\r\n                    </div>\r\n                    <div className=\"more\">\r\n                        <a href=\"#tv\" onClick={() => setTVPage(tv_page + 1)}>Load More</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Planets\r\n                color=\"#fdc325\"\r\n                background=\"#011A27\"\r\n                customLoading={loading} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopRated;","import React, { useEffect, useState } from 'react'\r\nimport \"./MovieDetails.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Planets } from 'react-preloaders';\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n\r\nconst MovieDetails = ({ match }) => {\r\n\r\n\r\n    const [movie, getMovie] = useState({});\r\n    const [credits, setCredits] = useState([]);\r\n    const [similar, setSimilar] = useState([]);\r\n    const [recommends, setRecommends] = useState([]);\r\n    const [favourites, setFavourites] = useState([]);\r\n    const [watchlist, setWatchlist] = useState([]);\r\n    const [id, setId] = useState(match.params.id);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        setId(match.params.id);\r\n    }, [match.params.id])\r\n\r\n    const addToFav = () => {\r\n        if (favourites.length === 0) {\r\n            setFavourites(old => [...old, { id: match.params.id, type: \"movie\" }]);\r\n            // console.log(watched)\r\n        } else {\r\n            const found = favourites.filter(item => item.id === match.params.id)\r\n            // console.log(found)\r\n            if (found.length === 0) {\r\n                setFavourites([...favourites, { id: match.params.id, type: \"movie\" }])\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            } else {\r\n                setFavourites(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            }\r\n        }\r\n    }\r\n    const addToWatchlist = () => {\r\n        if (watchlist.length === 0) {\r\n            setWatchlist(old => [...old, { id: match.params.id, type: \"movie\" }]);\r\n            // console.log(watched)\r\n        } else {\r\n            const found = watchlist.filter(item => item.id === match.params.id)\r\n            // console.log(found)\r\n            if (found.length === 0) {\r\n                setWatchlist([...watchlist, { id: match.params.id, type: \"movie\" }])\r\n                localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n            } else {\r\n                setWatchlist(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n            }\r\n        }\r\n    }\r\n\r\n    let watchlisted = false;\r\n    watchlist.map(item => {\r\n        if (item.id === match.params.id) {\r\n            watchlisted = true;\r\n        }\r\n    })\r\n\r\n    let favourited = false;\r\n    favourites.map(item => {\r\n        if (item.id === match.params.id) {\r\n            favourited = true;\r\n        }\r\n    })\r\n\r\n    const fetchData = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => getMovie(data))\r\n    }\r\n\r\n    const getCredits = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setCredits(data.cast))\r\n    }\r\n\r\n    const getSimilar = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setSimilar(data.results))\r\n    }\r\n\r\n    const getRecommends = () => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setRecommends(data.results))\r\n            .then(setLoading(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"favourites\") === null) {\r\n            setFavourites([]);\r\n        } else {\r\n            setFavourites(JSON.parse(localStorage.getItem(\"favourites\")))\r\n        }\r\n\r\n        if (localStorage.getItem(\"watchlist\") === null) {\r\n            setWatchlist([]);\r\n        } else {\r\n            setWatchlist(JSON.parse(localStorage.getItem(\"watchlist\")))\r\n        }\r\n\r\n        fetchData();\r\n        getCredits();\r\n        getSimilar();\r\n        getRecommends();\r\n    }, [id]);\r\n    useEffect(() => {\r\n        localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n    }, [favourites])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n    }, [watchlist])\r\n\r\n    if (movie.genres) {\r\n        return (\r\n            <>\r\n                <div className=\"movie-details\">\r\n                    <div className=\"details\">\r\n                        <div className=\"bg-img\">\r\n                            <img src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`} />\r\n                        </div>\r\n                        <div className=\"left-section\">\r\n                            <div className=\"poster\">\r\n                                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"btns\">\r\n                                <button className={watchlisted ? \"watch-list done\" : \"watch-list\"} onClick={addToWatchlist}>{watchlisted ? \"In Your Watchlist\" : \"Add To Watchlist\"}</button>\r\n                                <button className={favourited ? \"favourite done\" : \"favourite\"} onClick={addToFav}>{favourited ? \"Favourite\" : \"Add To Favourite\"}</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"right-section\">\r\n\r\n                            <div className=\"right-details\">\r\n                                <div className=\"title\">\r\n                                    <h1>\r\n                                        {`${movie.title}  (${movie.release_date.slice(0, 4)})`}\r\n                                    </h1>\r\n                                </div>\r\n\r\n                                {movie.tagline !== \"\" ?\r\n\r\n                                    <div className=\"tagline\">\r\n                                        <h2>\"{movie.tagline}\"</h2>\"\r\n                                    </div>\r\n\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n\r\n\r\n                                <div className=\"genres\">\r\n                                    <ul>\r\n                                        {movie.genres.map(item => {\r\n                                            return (<li key={item.id} >{item.name}</li>)\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                {movie.overview ?\r\n                                    <div className=\"overview\">\r\n                                        <div className=\"left\">\r\n                                            <h2>Overview</h2>\r\n                                        </div>\r\n                                        <div className=\"right\">\r\n                                            <p>{movie.overview}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    : \"\"}\r\n\r\n                                {credits.length === 0 ? \"\" :\r\n                                    <div className=\"cast\">\r\n                                        <div className=\"top\">\r\n                                            <h2>Cast</h2>\r\n                                        </div>\r\n                                        <div className=\"body\">\r\n                                            {credits\r\n                                                .filter((item, index) => item.profile_path !== null && index < 12)\r\n                                                .map((character) => {\r\n                                                    return (\r\n                                                        <div key={character.id} className=\"profile-container\">\r\n                                                            <img src={`https://image.tmdb.org/t/p/w500${character.profile_path}`}\r\n                                                                alt=\"Profile\" />\r\n                                                            <div className=\"name\">\r\n                                                                <p>{character.name}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    similar.length === 0 ? \"\" :\r\n                                        <div className=\"similar\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Similar</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                {similar\r\n                                                    .filter((item, index) => item.poster_path !== null && index < 10)\r\n                                                    .map((item) => {\r\n                                                        return (\r\n                                                            <Link key={item.id}\r\n                                                                to={`/${item.first_air_date ? \"TVDetails\" : \"movieDetails\"}/${item.id}`}\r\n                                                                onClick={() => setId(item.id)}>\r\n                                                                <div className=\"container\" >\r\n                                                                    <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\r\n                                                                        alt=\"Poster\" />\r\n                                                                    <div className=\"pop-up\">\r\n                                                                        <p>{item.title}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Link>\r\n                                                        )\r\n                                                    })}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                                {\r\n                                    recommends.length === 0 ? \"\" :\r\n                                        <div className=\"recommends\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Recommendations</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                {recommends\r\n                                                    .filter((item, index) => item.poster_path !== null && index < 10)\r\n                                                    .map((item) => {\r\n                                                        return (\r\n                                                            <Link key={item.id} to={`/${item.first_air_date ? \"TVDetails\" : \"movieDetails\"}/${item.id}`}\r\n                                                                onClick={() => setId(item.id)}>\r\n                                                                <div className=\"container\">\r\n                                                                    <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\r\n                                                                        alt=\"Poster\" />\r\n                                                                    <div className=\"pop-up\">\r\n                                                                        <p>{item.title}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Link>\r\n                                                        )\r\n                                                    })}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <Planets\r\n                    color=\"#fdc325\"\r\n                    background=\"#011A27\"\r\n                    customLoading={loading}\r\n                    time={2000} />\r\n            </>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"movie-details\"></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieDetails;","import React, { useEffect, useState } from 'react'\r\nimport \"./TVDetails.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Planets } from 'react-preloaders';\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n\r\nconst TVDetails = ({ match }) => {\r\n\r\n\r\n    const [tvShow, getTvShow] = useState({});\r\n    const [credits, setCredits] = useState([]);\r\n    const [similar, setSimilar] = useState([]);\r\n    const [recommends, setRecommends] = useState([]);\r\n    const [favourites, setFavourites] = useState([]);\r\n    const [watchlist, setWatchlist] = useState([]);\r\n    const [id, setId] = useState(match.params.id);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setId(match.params.id);\r\n    }, [match.params.id])\r\n\r\n    const addToFav = () => {\r\n        if (favourites.length === 0) {\r\n            setFavourites(old => [...old, { id: match.params.id, type: \"tv\" }]);\r\n            // console.log(watched)\r\n        } else {\r\n            const found = favourites.filter(item => item.id === match.params.id)\r\n            // console.log(found)\r\n            if (found.length === 0) {\r\n                setFavourites([...favourites, { id: match.params.id, type: \"tv\" }])\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            } else {\r\n                setFavourites(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            }\r\n        }\r\n    }\r\n    const addToWatchlist = () => {\r\n        if (watchlist.length === 0) {\r\n            setWatchlist(old => [...old, { id: match.params.id, type: \"tv\" }]);\r\n            // console.log(watched)\r\n        } else {\r\n            const found = watchlist.filter(item => item.id === match.params.id)\r\n            // console.log(found)\r\n            if (found.length === 0) {\r\n                setWatchlist([...watchlist, { id: match.params.id, type: \"tv\" }])\r\n                localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n            } else {\r\n                setWatchlist(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n            }\r\n        }\r\n    }\r\n\r\n    let watchlisted = false;\r\n    watchlist.map(item => {\r\n        if (item.id === match.params.id) {\r\n            watchlisted = true;\r\n        }\r\n    })\r\n\r\n    let favourited = false;\r\n    favourites.map(item => {\r\n        if (item.id === match.params.id) {\r\n            favourited = true;\r\n        }\r\n    })\r\n\r\n\r\n    const fetchData = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => getTvShow(data))\r\n    }\r\n\r\n    const getCredits = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/${id}/credits?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setCredits(data.cast))\r\n    }\r\n\r\n    const getSimilar = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/${id}/similar?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setSimilar(data.results))\r\n    }\r\n\r\n    const getRecommends = () => {\r\n        fetch(`https://api.themoviedb.org/3/tv/${id}/recommendations?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setRecommends(data.results))\r\n            .then(setLoading(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"favourites\") === null) {\r\n            setFavourites([]);\r\n        } else {\r\n            setFavourites(JSON.parse(localStorage.getItem(\"favourites\")))\r\n        }\r\n\r\n        if (localStorage.getItem(\"watchlist\") === null) {\r\n            setWatchlist([]);\r\n        } else {\r\n            setWatchlist(JSON.parse(localStorage.getItem(\"watchlist\")))\r\n        }\r\n        fetchData();\r\n        getCredits();\r\n        getSimilar();\r\n        getRecommends();\r\n    }, [id])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n    }, [favourites])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"watchlist\", JSON.stringify(watchlist))\r\n    }, [watchlist])\r\n\r\n\r\n\r\n    if (tvShow.genres) {\r\n        return (\r\n            <>\r\n                <div className=\"tv-details\">\r\n                    <div className=\"details\">\r\n                        <div className=\"bg-img\">\r\n                            <img src={`https://image.tmdb.org/t/p/w500${tvShow.backdrop_path}`} />\r\n                        </div>\r\n                        <div className=\"left-section\">\r\n                            <div className=\"poster\">\r\n                                <img src={`https://image.tmdb.org/t/p/w500${tvShow.poster_path}`} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"btns\">\r\n                                <button className={watchlisted ? \"watch-list done\" : \"watch-list\"} onClick={addToWatchlist}>{watchlisted ? \"In Your Watchlist\" : \"Add To Watchlist\"}</button>\r\n                                <button className={favourited ? \"favourite done\" : \"favourite\"} onClick={addToFav}>{favourited ? \"Favourite\" : \"Add To Favourite\"}</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"right-section\">\r\n\r\n                            <div className=\"right-details\">\r\n                                <div className=\"title\">\r\n                                    <h1>\r\n                                        {`${tvShow.name}  (${tvShow.first_air_date.slice(0, 4)} - ${tvShow.last_air_date.slice(0, 4)})`}\r\n                                    </h1>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"genres\">\r\n                                    <ul>\r\n                                        {tvShow.genres.map(item => {\r\n                                            return (<li key={item.id} >{item.name}</li>)\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                {tvShow.overview ?\r\n                                    <div className=\"overview\">\r\n                                        <div className=\"left\">\r\n                                            <h2>Overview</h2>\r\n                                        </div>\r\n                                        <div className=\"right\">\r\n                                            <p>{tvShow.overview}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    : \"\"}\r\n                                {credits.length === 0 ? \"\" :\r\n                                    <div className=\"cast\">\r\n                                        <div className=\"top\">\r\n                                            <h2>Cast</h2>\r\n                                        </div>\r\n                                        <div className=\"body\">\r\n                                            {credits\r\n                                                .filter((item, index) => item.profile_path !== null && index < 14)\r\n                                                .map((character) => {\r\n                                                    return (\r\n                                                        <div key={character.id} className=\"profile-container\">\r\n                                                            <img src={`https://image.tmdb.org/t/p/w500${character.profile_path}`}\r\n                                                                alt=\"Profile\" />\r\n                                                            <div className=\"name\">\r\n                                                                <p>{character.name}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    tvShow.seasons.length === 0 ? \"\" :\r\n                                        <div className=\"seasons\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Seasons</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                {tvShow.seasons\r\n                                                    .filter((item) => item.poster_path !== null)\r\n                                                    .map((item) => {\r\n                                                        return (\r\n                                                            // <Link to={`/${item.first_air_date ? \"TVDetails\" : \"movieDetails\"}/${item.id}`} >\r\n                                                            <div key={item.id} className=\"container\" >\r\n                                                                <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\r\n                                                                    alt=\"Poster\" />\r\n                                                                <div className=\"pop-up\">\r\n                                                                    <p>{item.name}</p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            /* </Link> */\r\n                                                        )\r\n                                                    })}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n                                {\r\n                                    similar.length === 0 ? \"\" :\r\n                                        <div className=\"similar\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Similar</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                {similar\r\n                                                    .filter((item, index) => item.poster_path !== null && index < 10)\r\n                                                    .map((item) => {\r\n                                                        return (\r\n                                                            <Link key={item.id} to={`/${item.first_air_date ? \"TVDetails\" : \"movieDetails\"}/${item.id}`}\r\n                                                                onClick={() => setId(item.id)}>\r\n                                                                <div className=\"container\" >\r\n                                                                    <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\r\n                                                                        alt=\"Poster\" />\r\n                                                                    <div className=\"pop-up\">\r\n                                                                        <p>{item.name}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Link>\r\n                                                        )\r\n                                                    })}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                                {\r\n                                    recommends.length === 0 ? \"\" :\r\n                                        <div className=\"recommends\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Recommendations</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                {recommends\r\n                                                    .filter((item, index) => item.poster_path !== null && index < 10)\r\n                                                    .map((item) => {\r\n                                                        return (\r\n                                                            <Link key={item.id} to={`/${item.first_air_date ? \"TVDetails\" : \"movieDetails\"}/${item.id}`}\r\n                                                                onClick={() => setId(item.id)}>\r\n                                                                <div className=\"container\">\r\n                                                                    <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\r\n                                                                        alt=\"Poster\" />\r\n                                                                    <div className=\"pop-up\">\r\n                                                                        <p>{item.name}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Link>\r\n                                                        )\r\n                                                    })}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <Planets\r\n                    color=\"#fdc325\"\r\n                    background=\"#011A27\"\r\n                    customLoading={loading}\r\n                    time={2000} />\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"movie-details\"></div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TVDetails;","import React, { useEffect, useState } from 'react'\r\nimport \"./Person.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Planets } from 'react-preloaders';\r\n\r\nconst api_key = \"137436a3a883e2b94597a24e32d9d6b8\";\r\n\r\n\r\nconst Person = ({ match }) => {\r\n\r\n\r\n    const [person, getPerson] = useState({});\r\n    const [movies, setMovies] = useState([]);\r\n    const [tvShows, setTvShows] = useState([]);\r\n    const [favourites, setFavourites] = useState([]);\r\n    const [id, setId] = useState(match.params.id);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        setId(match.params.id);\r\n    }, [match.params.id])\r\n\r\n    const addToFav = () => {\r\n        if (favourites.length === 0) {\r\n            setFavourites(old => [...old, { id: match.params.id, type: \"person\" }]);\r\n            // console.log(watched)\r\n        } else {\r\n            const found = favourites.filter(item => item.id === match.params.id)\r\n            // console.log(found)\r\n            if (found.length === 0) {\r\n                setFavourites([...favourites, { id: match.params.id, type: \"person\" }])\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            } else {\r\n                setFavourites(old => old.filter(item => item.id !== match.params.id))\r\n                localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let favourited = false;\r\n    favourites.map(item => {\r\n        if (item.id === match.params.id) {\r\n            favourited = true;\r\n        }\r\n    })\r\n\r\n    const fetchData = () => {\r\n        fetch(`https://api.themoviedb.org/3/person/${id}?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => getPerson(data))\r\n    }\r\n\r\n    const getMovies = () => {\r\n        fetch(`https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setMovies(data.crew))\r\n    }\r\n\r\n    const getTvShows = () => {\r\n        fetch(`https://api.themoviedb.org/3/person/${id}/tv_credits?api_key=${api_key}`)\r\n            .then(res => res.json())\r\n            .then(data => setTvShows(data.crew))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem(\"favourites\") === null) {\r\n            setFavourites([]);\r\n        } else {\r\n            setFavourites(JSON.parse(localStorage.getItem(\"favourites\")))\r\n        }\r\n\r\n        fetchData();\r\n        getMovies();\r\n        getTvShows();\r\n    }, [id]);\r\n    useEffect(() => {\r\n        localStorage.setItem(\"favourites\", JSON.stringify(favourites))\r\n    }, [favourites])\r\n\r\n    if (person.id) {\r\n        return (\r\n            <>\r\n                <div className=\"person-details\">\r\n                    <div className=\"details\">\r\n                        <div className=\"bg-img\">\r\n                        </div>\r\n                        <div className=\"left-section\">\r\n                            <div className=\"poster\">\r\n                                <img src={`https://image.tmdb.org/t/p/w500${person.profile_path}`} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"btns\">\r\n                                <button className={favourited ? \"favourite done\" : \"favourite\"} onClick={addToFav}>{favourited ? \"Favourite\" : \"Add To Favourite\"}</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"right-section\">\r\n\r\n                            {/* <div className=\"right-details\">\r\n                                <div className=\"title\">\r\n                                    <h1>\r\n                                        {`${movie.title}  (${movie.release_date.slice(0, 4)})`}\r\n                                    </h1>\r\n                                </div>\r\n\r\n                                {movie.tagline !== \"\" ?\r\n\r\n                                    <div className=\"tagline\">\r\n                                        <h2>\"{movie.tagline}\"</h2>\"\r\n                                    </div>\r\n\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n\r\n\r\n                                <div className=\"genres\">\r\n                                    <ul>\r\n                                        {movie.genres.map(item => {\r\n                                            return (<li key={item.id} >{item.name}</li>)\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                {movie.overview ?\r\n                                    <div className=\"overview\">\r\n                                        <div className=\"left\">\r\n                                            <h2>Overview</h2>\r\n                                        </div>\r\n                                        <div className=\"right\">\r\n                                            <p>{movie.overview}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    : \"\"}\r\n\r\n                                {credits.length === 0 ? \"\" :\r\n                                    <div className=\"cast\">\r\n                                        <div className=\"top\">\r\n                                            <h2>Cast</h2>\r\n                                        </div>\r\n                                        <div className=\"body\">\r\n                                            {credits\r\n                                                .filter((item, index) => item.profile_path !== null && index < 12)\r\n                                                .map((character) => {\r\n                                                    return (\r\n                                                        <div key={character.id} className=\"profile-container\">\r\n                                                            <img src={`https://image.tmdb.org/t/p/w500${character.profile_path}`}\r\n                                                                alt=\"Profile\" />\r\n                                                            <div className=\"name\">\r\n                                                                <p>{character.name}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    similar.length === 0 ? \"\" :\r\n                                        <div className=\"similar\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Similar</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                {similar\r\n                                                    .filter((item, index) => item.poster_path !== null && index < 10)\r\n                                                    .map((item) => {\r\n                                                        return (\r\n                                                            <Link key={item.id}\r\n                                                                to={`/${item.first_air_date ? \"TVDetails\" : \"movieDetails\"}/${item.id}`}\r\n                                                                onClick={() => setId(item.id)}>\r\n                                                                <div className=\"container\" >\r\n                                                                    <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\r\n                                                                        alt=\"Poster\" />\r\n                                                                    <div className=\"pop-up\">\r\n                                                                        <p>{item.title}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Link>\r\n                                                        )\r\n                                                    })}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                                {\r\n                                    recommends.length === 0 ? \"\" :\r\n                                        <div className=\"recommends\">\r\n                                            <div className=\"top\">\r\n                                                <h2>Recommendations</h2>\r\n                                            </div>\r\n                                            <div className=\"body\">\r\n                                                {recommends\r\n                                                    .filter((item, index) => item.poster_path !== null && index < 10)\r\n                                                    .map((item) => {\r\n                                                        return (\r\n                                                            <Link key={item.id} to={`/${item.first_air_date ? \"TVDetails\" : \"movieDetails\"}/${item.id}`}\r\n                                                                onClick={() => setId(item.id)}>\r\n                                                                <div className=\"container\">\r\n                                                                    <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\r\n                                                                        alt=\"Poster\" />\r\n                                                                    <div className=\"pop-up\">\r\n                                                                        <p>{item.title}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Link>\r\n                                                        )\r\n                                                    })}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n                            </div> */}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <Planets\r\n                    color=\"#fdc325\"\r\n                    background=\"#011A27\"\r\n                    // customLoading={loading}\r\n                    time={2000} />\r\n            </>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"person-details\"></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Person;","import React from 'react';\nimport \"./app.scss\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Nav from './Components/Header/Header';\nimport HomePage from './Components/HomePage/HomePage';\nimport WatchList from './Components/WatchListPage/WatchList';\nimport WatchedList from './Components/WatchedListPage/WatchedList';\nimport Search from './Components/SearchPage/Search';\nimport TopRated from './Components/TopRatedPage/TopRated';\nimport MovieDetails from './Components/MovieDetails/MovieDetails';\nimport TVDetails from './Components/TVDetails/TVDetails';\nimport Person from './Components/Person/Person';\n\n\nconst App = () => {\n\n\n  return (\n    <div >\n      <Router>\n        <Nav />\n        <Switch>\n\n          <Route exact path=\"/React-Movie-App/\" >\n            <HomePage />\n          </Route>\n\n          <Route exact path=\"/watchedList\" >\n            <WatchedList />\n          </Route>\n\n          <Route exact path=\"/watchList\">\n            <WatchList />\n          </Route>\n\n          <Route exact path=\"/search\">\n            <Search />\n          </Route>\n\n          <Route exact path=\"/topRated\">\n            <TopRated />\n          </Route>\n\n          <Route exact path=\"/movieDetails/:id\" component={MovieDetails} />\n\n          <Route exact path=\"/TVDetails/:id\" component={TVDetails} />\n\n          <Route exact path=\"/Person/:id\" component={Person} />\n\n        </Switch>\n\n      </Router>\n\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}