{"version":3,"sources":["Components/Header/Header.jsx","Components/Header sync /^.*$","Components/Header/backgrounds/0.jpg","Components/Header/backgrounds/1.jpg","Components/Header/backgrounds/2.jpg","Components/HomePage/SearchForm.jsx","Components/HomePage/HomePage.jsx","Components/WatchListPage/WatchList.jsx","Components/WatchedListPage/WatchedList.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","className","src","require","Math","floor","random","alt","to","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SearchForm","htmlFor","type","name","placeholder","HomePage","WatchList","classname","WatchedList","App","path","exact","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+HAAA,wCAqCeA,UAhCH,WAOR,OACI,gCACI,yBAAKC,UAAU,MACX,yBACIC,IAAKC,MAAQ,UAPjB,iBADEC,KAAKC,MAAsB,EAAhBD,KAAKE,UACO,SAQrBC,IAAI,gBAGZ,6BACI,yBAAKN,UAAU,kBACX,yBAAKA,UAAU,QACX,4BAAI,oCAAJ,SAGR,4BACI,4BAAI,kBAAC,IAAD,CAAMA,UAAU,QAAQO,GAAG,KAA3B,SACJ,4BAAI,kBAAC,IAAD,CAAMP,UAAU,QAAQO,GAAG,cAA3B,cACJ,4BAAI,kBAAC,IAAD,CAAMP,UAAU,QAAQO,GAAG,gBAA3B,qB,uHC7BxB,IAAIC,EAAM,CACT,WAAY,EACZ,eAAgB,EAChB,gBAAiB,GACjB,sBAAuB,GACvB,sBAAuB,GACvB,sBAAuB,IAIxB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBC3BpBU,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,uLCa5BC,G,MATI,WACf,OACI,yBAAKvB,UAAU,eACX,2BAAOwB,QAAQ,eAAexB,UAAU,gBAAxC,UACA,2BAAOyB,KAAK,OAAOC,KAAK,eAAef,GAAG,eAAegB,YAAY,6BCKlEC,EATE,WACb,OACI,6BACI,yCACA,kBAAC,EAAD,QCIGC,G,MARG,WACd,OACI,6BACI,wBAAIC,UAAU,SAAd,gBCKGC,G,MARK,WAChB,OACI,6BACI,+CCwBGC,EAlBf,iLAEI,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,UAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,KAAK,eAAeE,UAAWJ,IACtC,kBAAC,IAAD,CAAOE,KAAK,aAAaE,UAAWN,WAThD,GAAyBO,aCDLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,SD8H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ab6a89e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Header.scss\";\r\n// import bg from \"./0.jpg\"\r\n\r\nconst Nav = () => {\r\n\r\n    const source = () => {\r\n        let src = Math.floor(Math.random() * 3)\r\n        return (\"./backgrounds/\" + src + \".jpg\");\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"bg\">\r\n                <img\r\n                    src={require(`${source()}`)}\r\n                    alt=\"Background\"\r\n                />\r\n            </div>\r\n            <nav>\r\n                <div className=\"logo-container\">\r\n                    <div className=\"logo\">\r\n                        <h1><span>My</span>Mdb</h1>\r\n                    </div>\r\n                </div>\r\n                <ul>\r\n                    <li><Link className=\"links\" to=\"/\">Home</Link></li>\r\n                    <li><Link className=\"links\" to=\"/watchList\">WatchList</Link></li>\r\n                    <li><Link className=\"links\" to=\"/watchedList\">WatchedList</Link></li>\r\n                </ul>\r\n            </nav>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav;","var map = {\n\t\"./Header\": 9,\n\t\"./Header.jsx\": 9,\n\t\"./Header.scss\": 14,\n\t\"./backgrounds/0.jpg\": 31,\n\t\"./backgrounds/1.jpg\": 32,\n\t\"./backgrounds/2.jpg\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30;","module.exports = __webpack_public_path__ + \"static/media/0.aa2aa993.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.0af8103e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.578047fd.jpg\";","import React from 'react';\r\nimport \"./homePage.scss\";\r\n\r\n\r\nconst SearchForm = () => {\r\n    return (\r\n        <div className=\"search-form\" >\r\n            <label htmlFor=\"search-input\" className=\"search-label\">Search</label>\r\n            <input type=\"text\" name=\"search-input\" id=\"search-input\" placeholder=\"Search your Movie ...\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport \"./homePage.scss\";\r\nimport SearchForm from \"./SearchForm\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n            <SearchForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react'\r\nimport \"./Watchlist.scss\";\r\n\r\n\r\nconst WatchList = () => {\r\n    return (\r\n        <div>\r\n            <h1 classname=\"intro\">WatchList</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchList;","import React from 'react'\r\nimport \"./WatchedList.scss\";\r\n\r\n\r\nconst WatchedList = () => {\r\n    return (\r\n        <div>\r\n            <h1>Watched List</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchedList;","import React, { Component } from 'react';\nimport \"./app.scss\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Nav from './Components/Header/Header';\nimport HomePage from './Components/HomePage/HomePage';\nimport WatchList from './Components/WatchListPage/WatchList';\nimport WatchedList from './Components/WatchedListPage/WatchedList';\n\n\nexport class App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/watchedList\" component={WatchedList} />\n            <Route path=\"/watchList\" component={WatchList} />\n          </Switch>\n\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}